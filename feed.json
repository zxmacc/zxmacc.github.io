{"version":"https://jsonfeed.org/version/1","name":"檐牙の小窝","home_page_url":"https://www.zxma.top","feed_url":"https://www.zxma.top/feed.json","author":{"name":"檐牙"},"items":[{"id":"https://www.zxma.top/posts/514166a2/","url":"https://www.zxma.top/posts/514166a2/","title":"让1panel的OpenResty显示CDN和访客的IP","content_html":"<div class=\"note info flat\"><p>写的比较仓促，有什么不足的地方，还请大家多多指点。评论区欢迎留言~<br>这个方法可以让OpenResty同时显示<code>两种</code>IP<br>适用于套了CDN，既想知道CDN节点IP，又想知道访客IP的客官们</p>\n<div class='checkbox minus red checked'><input type=\"checkbox\" checked=\"checked\"/>\n            <p>减号为需要删除的代码</p>\n            </div>\n<div class='checkbox plus green checked'><input type=\"checkbox\" checked=\"checked\"/>\n            <p>加号为需要增加的代码</p>\n            </div></div>\n<h1 id=\"进入配置页面\"><a href=\"#进入配置页面\" class=\"headerlink\" title=\"进入配置页面\"></a>进入配置页面</h1><ol>\n<li>点击<code>1panel</code>左侧列表中的<wavy>网站</wavy> </li>\n<li>点击绿色<code>OpenResty</code>右侧的<wavy>设置</wavy>按钮</li>\n<li>点击<wavy>配置修改</wavy>，进入配置页面<br><img src=\"https://bu.dusays.com/2024/02/27/65dd4a6110874.png\" alt=\"\"></li>\n</ol>\n<h1 id=\"修改配置\"><a href=\"#修改配置\" class=\"headerlink\" title=\"修改配置\"></a>修改配置</h1><p>参考以下代码块示例</p>\n<div class='checkbox minus red checked'><input type=\"checkbox\" checked=\"checked\"/>\n            <p>减号为需要删除的代码</p>\n            </div>\n<div class='checkbox plus green checked'><input type=\"checkbox\" checked=\"checked\"/>\n            <p>加号为需要增加的代码</p>\n            </div>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user  root;</span><br><span class=\"line\">worker_processes  auto;</span><br><span class=\"line\">error_log  /var/log/nginx/error.log notice;</span><br><span class=\"line\">error_log  /dev/stdout notice;</span><br><span class=\"line\">pid        /var/run/nginx.pid;</span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    worker_connections  1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\"><span class=\"deletion\">-   log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class=\"line\"><span class=\"deletion\">-                     &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class=\"line\"><span class=\"deletion\">-                     &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class=\"line\"><span class=\"addition\">+   log_format main &#x27;CDN_IP:$remote_addr - CLIENT_IP:$HTTP_X_FORWARDED_FOR - $remote_user [$time_local] &quot;$request&quot; &#x27; &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27; &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;; </span></span><br><span class=\"line\">    server_tokens off;</span><br><span class=\"line\">    access_log  /var/log/nginx/access.log  main;</span><br><span class=\"line\">    access_log /dev/stdout main;</span><br><span class=\"line\">    sendfile        on;</span><br></pre></td></tr></table></figure>\n<p>下面是修改好的代码，不想看怎么改的客官们，<code>Crtl+A</code>全选，<code>Crtl+C</code>复制，<code>Crtl+V</code>黏贴，三连，应该就能用了<br><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user  root;</span><br><span class=\"line\">worker_processes  auto;</span><br><span class=\"line\">error_log  /var/log/nginx/error.log notice;</span><br><span class=\"line\">error_log  /dev/stdout notice;</span><br><span class=\"line\">pid        /var/run/nginx.pid;</span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    worker_connections  1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\">    log_format main &#x27;CDN_IP:$remote_addr - CLIENT_IP:$HTTP_X_FORWARDED_FOR - $remote_user [$time_local] &quot;$request&quot; &#x27; &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27; &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;; </span><br><span class=\"line\">    server_tokens off;</span><br><span class=\"line\">    access_log  /var/log/nginx/access.log  main;</span><br><span class=\"line\">    access_log /dev/stdout main;</span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\"></span><br><span class=\"line\">    server_names_hash_bucket_size 512;</span><br><span class=\"line\">    client_header_buffer_size 32k;</span><br><span class=\"line\">    client_max_body_size 50m;</span><br><span class=\"line\">    keepalive_timeout 60;</span><br><span class=\"line\">    keepalive_requests 100000;</span><br><span class=\"line\"></span><br><span class=\"line\">    gzip on;</span><br><span class=\"line\">    gzip_min_length  1k;</span><br><span class=\"line\">    gzip_buffers     4 16k;</span><br><span class=\"line\">    gzip_http_version 1.1;</span><br><span class=\"line\">    gzip_comp_level 2;</span><br><span class=\"line\">    gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml;</span><br><span class=\"line\">    gzip_vary on;</span><br><span class=\"line\">    gzip_proxied   expired no-cache no-store private auth;</span><br><span class=\"line\">    gzip_disable   &quot;MSIE [1-6]\\.&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    lua_code_cache on;</span><br><span class=\"line\">    lua_shared_dict limit 10m;</span><br><span class=\"line\">    lua_package_path &quot;/www/common/waf/?.lua;/usr/local/openresty/lualib/?.lua;&quot;;</span><br><span class=\"line\">    init_by_lua_file  /www/common/waf/init.lua;</span><br><span class=\"line\"></span><br><span class=\"line\">    limit_conn_zone $binary_remote_addr zone=perip:10m;</span><br><span class=\"line\">    limit_conn_zone $server_name zone=perserver:10m;</span><br><span class=\"line\"></span><br><span class=\"line\">    include /usr/local/openresty/nginx/conf/conf.d/*.conf;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"引入配置\"><a href=\"#引入配置\" class=\"headerlink\" title=\"引入配置\"></a>引入配置</h1><div class=\"note warning flat\"><p>到此并没有结束，还需在网站的配置文件中的<strong>access_log</strong>项上追加一个<code>main</code></p>\n</div>\n<p>在你觉的需要的网站配置项上添加就可以了，并不需要在每个网站的配置项上都添加<br>如下图所示</p>\n<ol>\n<li>点击<code>1panel</code>左侧列表中的<wavy>网站</wavy></li>\n<li>点击你的网站名称或者右侧的配置按钮，都是可以进入配置页面的</li>\n<li>点击配置文件，在<strong>access_log</strong>处的后面，添加一个<strong>main</strong><br><img src=\"https://bu.dusays.com/2024/02/27/65dd5439e8adf.png\" alt=\"\"><br><img src=\"https://bu.dusays.com/2024/02/27/65dd640bd5a49.png\" alt=\"\"><br><img src=\"https://bu.dusays.com/2024/02/27/65dd63f403e0d.png\" alt=\"增加mian\"><br>代码块示例<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80 ; </span><br><span class=\"line\">    listen [::]:80 ; </span><br><span class=\"line\">    server_name example.top; </span><br><span class=\"line\">    index index.php index.html index.htm default.php default.htm default.html; </span><br><span class=\"line\">    proxy_set_header Host $host; </span><br><span class=\"line\">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span><br><span class=\"line\">    proxy_set_header X-Forwarded-Host $server_name; </span><br><span class=\"line\">    proxy_set_header X-Real-IP $remote_addr; </span><br><span class=\"line\">    proxy_set_header Connection &quot;upgrade&quot;; </span><br><span class=\"line\"><span class=\"deletion\">-    access_log /www/sites/example.top/log/access.log; </span></span><br><span class=\"line\"><span class=\"addition\">+    access_log /www/sites/example.top/log/access.log main; </span></span><br><span class=\"line\">    error_log /www/sites/example.top/log/error.log; </span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h1><p>如图，<code>CDN_IP</code>为CDN节点IP ， <code>CLIENT_IP</code>为访客真实IP<br><img src=\"https://bu.dusays.com/2024/02/27/65dd657a0399f.png\" alt=\"\"></p>\n<h1 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h1><p>这个方法最初是在云雨论坛上看到的，原文放在下面了，博主本人是觉得挺好用的<br><div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://forum.rainyun.com/t/topic/462\">\n    <div class=\"tag-link-tips\">引用站外地址</div>\n    <div class=\"tag-link-bottom\">\n        <div class=\"tag-link-left\" style=\"\">\n          <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n        </div>\n        <div class=\"tag-link-right\">\n            <div class=\"tag-link-title\">雨云宝塔虚拟主机获取访客真实IP</div>\n            <div class=\"tag-link-sitename\">雨云论坛</div>\n        </div>\n        <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n    </div>\n    </a></div></p>\n","content_text":"写的比较仓促，有什么不足的地方，还请大家多多指点。评论区欢迎留言~这个方法可以让OpenResty同时显示两种IP适用于套了CDN，既想知道CDN节点IP，又想知道访客IP的客官们 减号为需要删除的代码 加号为需要增加的代码 进入配置页面 点击1panel左侧列表中的网站 点击绿色OpenResty右侧的设置按钮 点击配置修改，进入配置页面 修改配置参考以下代码块示例 减号为需要删除的代码 加号为需要增加的代码 123456789101112131415161718192021user root;worker_processes auto;error_log /var/log/nginx/error.log notice;error_log /dev/stdout notice;pid /var/run/nginx.pid;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream;- log_format main &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;- &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;- &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;+ log_format main &#x27;CDN_IP:$remote_addr - CLIENT_IP:$HTTP_X_FORWARDED_FOR - $remote_user [$time_local] &quot;$request&quot; &#x27; &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27; &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;; server_tokens off; access_log /var/log/nginx/access.log main; access_log /dev/stdout main; sendfile on; 下面是修改好的代码，不想看怎么改的客官们，Crtl+A全选，Crtl+C复制，Crtl+V黏贴，三连，应该就能用了123456789101112131415161718192021222324252627282930313233343536373839404142434445user root;worker_processes auto;error_log /var/log/nginx/error.log notice;error_log /dev/stdout notice;pid /var/run/nginx.pid;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; log_format main &#x27;CDN_IP:$remote_addr - CLIENT_IP:$HTTP_X_FORWARDED_FOR - $remote_user [$time_local] &quot;$request&quot; &#x27; &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27; &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;; server_tokens off; access_log /var/log/nginx/access.log main; access_log /dev/stdout main; sendfile on; server_names_hash_bucket_size 512; client_header_buffer_size 32k; client_max_body_size 50m; keepalive_timeout 60; keepalive_requests 100000; gzip on; gzip_min_length 1k; gzip_buffers 4 16k; gzip_http_version 1.1; gzip_comp_level 2; gzip_types text/plain application/javascript application/x-javascript text/javascript text/css application/xml; gzip_vary on; gzip_proxied expired no-cache no-store private auth; gzip_disable &quot;MSIE [1-6]\\.&quot;; lua_code_cache on; lua_shared_dict limit 10m; lua_package_path &quot;/www/common/waf/?.lua;/usr/local/openresty/lualib/?.lua;&quot;; init_by_lua_file /www/common/waf/init.lua; limit_conn_zone $binary_remote_addr zone=perip:10m; limit_conn_zone $server_name zone=perserver:10m; include /usr/local/openresty/nginx/conf/conf.d/*.conf;&#125; 引入配置到此并没有结束，还需在网站的配置文件中的access_log项上追加一个main 在你觉的需要的网站配置项上添加就可以了，并不需要在每个网站的配置项上都添加如下图所示 点击1panel左侧列表中的网站 点击你的网站名称或者右侧的配置按钮，都是可以进入配置页面的 点击配置文件，在access_log处的后面，添加一个main代码块示例12345678910111213server &#123; listen 80 ; listen [::]:80 ; server_name example.top; index index.php index.html index.htm default.php default.htm default.html; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Host $server_name; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Connection &quot;upgrade&quot;; - access_log /www/sites/example.top/log/access.log; + access_log /www/sites/example.top/log/access.log main; error_log /www/sites/example.top/log/error.log; 效果展示如图，CDN_IP为CDN节点IP ， CLIENT_IP为访客真实IP 说明这个方法最初是在云雨论坛上看到的，原文放在下面了，博主本人是觉得挺好用的 引用站外地址 雨云宝塔虚拟主机获取访客真实IP 雨云论坛","summary":"写的比较仓促，有什么不足的地方，还请大家多多指点。评论区欢迎留言~这个方法可以让OpenResty同时显示两种IP适用于套了CDN，既想知道CDN节点IP，又想知道访客IP的客官们 减号为需要删除的代码 加号为需要增加的代码 进入配置页面 点击1panel左侧列表中的网站 点击绿色OpenResty右侧的设置按钮 点击配置修改，进入配置页面 修改配置参考以下代码块示例 减号为需要删除的代码 加号为需要增加的代码 123456789101112131415161718192021user root;worker_processes auto;error_log /var/log/nginx/error.log notice;error_log /dev/stdout notice;pid /var/run/nginx.pid;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream;- log_format main &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;- &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;- &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;+ log_format main &#x27;CDN_IP:$remote_addr - CLIENT_IP:$HTTP_X_FORWARDED_FOR - $remote_user [$time_local] &quot;$request&quot; &#x27; &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27; &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;; server_tokens off; access_log /var/log/nginx/access.log main; access_log /dev/stdout main; sendfile on; 下面是修改好的代码，不想看怎么改的客官们，Crtl+A全选，Crtl+C复制，Crtl+V黏贴，三连，应该就能用了123456789101112131415161718192021222324252627282930313233343536373839404142434445user root;worker_processes auto;error_log /var/log/nginx/error.log notice;error_log /dev/stdout notice;pid /var/run/nginx.pid;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; log_format main &#x27;CDN_IP:$remote_addr - CLIENT_IP:$HTTP_X_FORWARDED_FOR - $remote_user [$time_local] &quot;$request&quot; &#x27; &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27; &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;; server_tokens off; access_log /var/log/nginx/access.log main; access_log /dev/stdout main; sendfile on; server_names_hash_bucket_size 512; client_header_buffer_size 32k; client_max_body_size 50m; keepalive_timeout 60; keepalive_requests 100000; gzip on; gzip_min_length 1k; gzip_buffers 4 16k; gzip_http_version 1.1; gzip_comp_level 2; gzip_types text/plain application/javascript application/x-javascript text/javascript text/css application/xml; gzip_vary on; gzip_proxied expired no-cache no-store private auth; gzip_disable &quot;MSIE [1-6]\\.&quot;; lua_code_cache on; lua_shared_dict limit 10m; lua_package_path &quot;/www/common/waf/?.lua;/usr/local/openresty/lualib/?.lua;&quot;; init_by_lua_file /www/common/waf/init.lua; limit_conn_zone $binary_remote_addr zone=perip:10m; limit_conn_zone $server_name zone=perserver:10m; include /usr/local/openresty/nginx/conf/conf.d/*.conf;&#125; 引入配置到此并没有结束，还需在网站的配置文件中的access_log项上追加一个main 在你觉的需要的网站配置项上添加就可以了，并不需要在每个网站的配置项上都添加如下图所示 点击1panel左侧列表中的网站 点击你的网站名称或者右侧的配置按钮，都是可以进入配置页面的 点击配置文件，在access_log处的后面，添加一个main代码块示例12345678910111213server &#123; listen 80 ; listen [::]:80 ; server_name example.top; index index.php index.html index.htm default.php default.htm default.html; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Host $server_name; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Connection &quot;upgrade&quot;; - access_log /www/sites/example.top/log/access.log; + access_log /www/sites/example.top/log/access.log main; error_log /www/sites/example.top/log/error.log; 效果展示如图，CDN_IP为CDN节点IP ， CLIENT_IP为访客真实IP 说明这个方法最初是在云雨论坛上看到的，原文放在下面了，博主本人是觉得挺好用的 引用站外地址 雨云宝塔虚拟主机获取访客真实IP 雨云论坛","date_published":"2024-02-27T01:50:04.000Z","tags":["笔记","1panel","OpenResty"]},{"id":"https://www.zxma.top/posts/66629b5b/","url":"https://www.zxma.top/posts/66629b5b/","title":"Mirai机器人Linux部署记录","content_html":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"https://bu.dusays.com/2023/08/02/64ca10a8b0e02.png\" style=\"width:200px;\"/></div></div>\n<div class='checkbox green checked'><input type=\"radio\" checked=\"checked\"/>\n            <p>Mirai 是一个在全平台下运行，提供 QQ Android 协议支持的高效率机器人库</p>\n            </div>\n<h2 id=\"引用声明\"><a href=\"#引用声明\" class=\"headerlink\" title=\"引用声明\"></a>引用声明</h2><span class='p center logo h2'>一切开发旨在学习，请勿用于非法用途</span>\n<div class='checkbox green checked'><input type=\"radio\" checked=\"checked\"/>\n            <p>mirai 是完全免费且开放源代码的软件，仅供学习和娱乐用途使用</p>\n            </div>\n<div class='checkbox green checked'><input type=\"radio\" checked=\"checked\"/>\n            <p>mirai 不会通过任何方式强制收取费用，或对使用者提出物质条件</p>\n            </div>\n<div class='checkbox green checked'><input type=\"radio\" checked=\"checked\"/>\n            <p>mirai 由整个开源社区维护，并不是属于某个个体的作品，所有贡献者都享有其作品的著作权。</p>\n            </div>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><div class=\"tip cogs\"><ol>\n<li>需要服务器，本篇用的是腾讯云上海区的2H2G服务器</li>\n<li>本篇文章只是记录，不是教程，目前还不熟悉，不敢写教程,还请各位大佬指点</li>\n<li>系统为Ubuntu 22.04.2 LTS</li>\n<li>感谢<a href=\"https://github.com/dorrhound\">Dorrhound</a>赞助的服务器</li>\n</ol>\n</div>\n<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h1><h2 id=\"更新依赖\"><a href=\"#更新依赖\" class=\"headerlink\" title=\"更新依赖\"></a>更新依赖</h2><p>这里使用的是<a href=\"http://www.hostbuf.com/\">Finalshell</a>，个人觉得挺好用的<br>连上服务器后，更新依赖并创建文件夹<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get update</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> mcl <span class=\"comment\">#这里的mcl可以自行修改，是文件夹名称</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"下载MCL\"><a href=\"#下载MCL\" class=\"headerlink\" title=\"下载MCL\"></a>下载MCL</h2><div class='checkbox green checked'><input type=\"radio\" checked=\"checked\"/>\n            <p><a href=\"https://mirai.mamoe.net/topic/177/mcl-%E6%A8%A1%E5%9D%97%E5%8C%96-%E8%BD%BB%E9%87%8F%E7%BA%A7%E4%B8%94%E6%94%AF%E6%8C%81%E5%AE%8C%E5%85%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84-mirai-%E5%8A%A0%E8%BD%BD%E5%99%A8?_=1690966310799\">MCL</a>是模块化、轻量级且支持完全自定义的 mirai 加载器</p>\n            </div>\n<p>用MCL可以省去很多事情，适合新手</p>\n<h3 id=\"以Linux为例\"><a href=\"#以Linux为例\" class=\"headerlink\" title=\"以Linux为例\"></a>以Linux为例</h3><p>这里使用的是最新版的MCL<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> mcl</span><br><span class=\"line\">curl -LJO https://github.com/iTXTech/mcl-installer/releases/download/ae9f946/mcl-installer-ae9f946-linux-amd64-musl</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> +x mcl-installer-ae9f946-linux-amd64-musl</span><br><span class=\"line\">./mcl-installer-ae9f946-linux-amd64-musl</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"运行-Mcl-installer\"><a href=\"#运行-Mcl-installer\" class=\"headerlink\" title=\"运行 Mcl-installer\"></a>运行 Mcl-installer</h3><p>一般全部默认，然后等待安装完成即可<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Would you like to install Java? (Y/N, default: Y)</span><br><span class=\"line\">是否安装Java，如果上面的检测结果输出的Java版本大于11即可，可输入N跳过安装，否则必须安装Java</span><br><span class=\"line\"></span><br><span class=\"line\">Java version (11, 17, 18, default: 17): 选择Java版本安装，默认为Java 17</span><br><span class=\"line\">JRE or JDK (1: JRE, 2: JDK, default: JRE): 选择JRE还是JDK安装，默认为JRE</span><br><span class=\"line\">Binary Architecture (default: x64): 选择架构安装，默认x64，Apple Silicon 请选择 aarch64</span><br><span class=\"line\">如果操作系统为Windows并且需要使用 mirai-native，请选择 x32（而不是i386等其他名字）</span><br><span class=\"line\"></span><br><span class=\"line\">The latest stable version of iTXTech MCL is x.x.x 获取最新MCL并询问是否下载</span><br><span class=\"line\">Would you like to download it? (Y/N, default: Y) Y：下载，N：取消</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"运行Mcl\"><a href=\"#运行Mcl\" class=\"headerlink\" title=\"运行Mcl\"></a>运行Mcl</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./mcl</span><br></pre></td></tr></table></figure>\n<p>输入指令后看到这样的一个界面就是成功了<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">==================================[ Mirai consosle 2.14.0 ]===================================</span><br><span class=\"line\"> __       __ __                   __  ______                                      __</span><br><span class=\"line\">|  \\     /  \\  \\                 |  \\/      \\                                    |  \\</span><br><span class=\"line\">| ▓▓\\   /  ▓▓\\▓▓ ______   ______  \\▓▓  ▓▓▓▓▓▓\\ ______  _______   _______  ______ | ▓▓ ______</span><br><span class=\"line\">| ▓▓▓\\ /  ▓▓▓  \\/      \\ |      \\|  \\ ▓▓   \\▓▓/      \\|       \\ /       \\/      \\| ▓▓/      \\</span><br><span class=\"line\">| ▓▓▓▓\\  ▓▓▓▓ ▓▓  ▓▓▓▓▓▓\\ \\▓▓▓▓▓▓\\ ▓▓ ▓▓     |  ▓▓▓▓▓▓\\ ▓▓▓▓▓▓▓\\  ▓▓▓▓▓▓▓  ▓▓▓▓▓▓\\ ▓▓  ▓▓▓▓▓▓\\</span><br><span class=\"line\">| ▓▓\\▓▓ ▓▓ ▓▓ ▓▓ ▓▓   \\▓▓/      ▓▓ ▓▓ ▓▓   __| ▓▓  | ▓▓ ▓▓  | ▓▓\\▓▓    \\| ▓▓  | ▓▓ ▓▓ ▓▓    ▓▓</span><br><span class=\"line\">| ▓▓ \\▓▓▓| ▓▓ ▓▓ ▓▓     |  ▓▓▓▓▓▓▓ ▓▓ ▓▓__/  \\ ▓▓__/ ▓▓ ▓▓  | ▓▓_\\▓▓▓▓▓▓\\ ▓▓__/ ▓▓ ▓▓ ▓▓▓▓▓▓▓▓</span><br><span class=\"line\">| ▓▓  \\▓ | ▓▓ ▓▓ ▓▓      \\▓▓    ▓▓ ▓▓\\▓▓    ▓▓\\▓▓    ▓▓ ▓▓  | ▓▓       ▓▓\\▓▓    ▓▓ ▓▓\\▓▓     \\</span><br><span class=\"line\"> \\▓▓      \\▓▓\\▓▓\\▓▓       \\▓▓▓▓▓▓▓\\▓▓ \\▓▓▓▓▓▓  \\▓▓▓▓▓▓ \\▓▓   \\▓▓\\▓▓▓▓▓▓▓  \\▓▓▓▓▓▓ \\▓▓ \\▓▓▓▓▓▓▓</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2023-08-02 17:14:50 I/main: Backend: version 2.14.0, built on 2023-02-06 14:25:21.</span><br><span class=\"line\">2023-08-02 17:14:50 I/main: Frontend Terminal: version 2.14.0, provided by Mamoe Technologies</span><br><span class=\"line\">2023-08-02 17:14:50 I/main: Welcome to visit https://mirai.mamoe.net/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"部署签名服务\"><a href=\"#部署签名服务\" class=\"headerlink\" title=\"部署签名服务\"></a>部署签名服务</h2><p>由于QQ官方限制，需要配置第三方签名服务才能解决登陆和发消息的问题<br>具体请参照mirai官方论坛，按照cssxsh大佬的方法来，即可解除限制，但QQ号有冻结的风险</p>\n<div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://mirai.mamoe.net/topic/2386/fixprotocolversion-%E4%B8%B4%E6%97%B6%E6%80%A7%E5%8D%8F%E8%AE%AE%E4%BF%AE%E5%A4%8D%E6%8F%92%E4%BB%B6-code-45-code-235?_=1690967802568\">\n    <div class=\"tag-link-tips\">引用站外地址</div>\n    <div class=\"tag-link-bottom\">\n        <div class=\"tag-link-left\" style=\"\">\n          <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n        </div>\n        <div class=\"tag-link-right\">\n            <div class=\"tag-link-title\">FixProtocolVersion</div>\n            <div class=\"tag-link-sitename\">临时性协议修复插件</div>\n        </div>\n        <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n    </div>\n    </a></div>\n<div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://mirai.mamoe.net/topic/2365/unidbg-fetch-qsign-1-1-3-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/22?_=1690967948520\">\n    <div class=\"tag-link-tips\">引用站外地址</div>\n    <div class=\"tag-link-bottom\">\n        <div class=\"tag-link-left\" style=\"\">\n          <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n        </div>\n        <div class=\"tag-link-right\">\n            <div class=\"tag-link-title\">unidbg-fetch-qsign1.1.3</div>\n            <div class=\"tag-link-sitename\">使用方法</div>\n        </div>\n        <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n    </div>\n    </a></div>\n<div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://github.com/cssxsh/fix-protocol-version/tree/v1.9.3\">\n    <div class=\"tag-link-tips\">引用站外地址</div>\n    <div class=\"tag-link-bottom\">\n        <div class=\"tag-link-left\" style=\"\">\n          <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n        </div>\n        <div class=\"tag-link-right\">\n            <div class=\"tag-link-title\">fix-protocol-version</div>\n            <div class=\"tag-link-sitename\">fix-protocol-version</div>\n        </div>\n        <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n    </div>\n    </a></div>\n<h2 id=\"Mirai相关链接\"><a href=\"#Mirai相关链接\" class=\"headerlink\" title=\"Mirai相关链接\"></a>Mirai相关链接</h2><div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://bu.dusays.com/2023/08/02/64ca10a8b0e02.png\">\n    <div class=\"tag-link-tips\">引用站外地址</div>\n    <div class=\"tag-link-bottom\">\n        <div class=\"tag-link-left\" style=\"\">\n          <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n        </div>\n        <div class=\"tag-link-right\">\n            <div class=\"tag-link-title\">MiraiForum</div>\n            <div class=\"tag-link-sitename\"> https://mirai.mamoe.net/</div>\n        </div>\n        <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n    </div>\n    </a></div>\n","content_text":"介绍 Mirai 是一个在全平台下运行，提供 QQ Android 协议支持的高效率机器人库 引用声明一切开发旨在学习，请勿用于非法用途 mirai 是完全免费且开放源代码的软件，仅供学习和娱乐用途使用 mirai 不会通过任何方式强制收取费用，或对使用者提出物质条件 mirai 由整个开源社区维护，并不是属于某个个体的作品，所有贡献者都享有其作品的著作权。 前言 需要服务器，本篇用的是腾讯云上海区的2H2G服务器 本篇文章只是记录，不是教程，目前还不熟悉，不敢写教程,还请各位大佬指点 系统为Ubuntu 22.04.2 LTS 感谢Dorrhound赞助的服务器 正文更新依赖这里使用的是Finalshell，个人觉得挺好用的连上服务器后，更新依赖并创建文件夹12apt-get updatemkdir mcl #这里的mcl可以自行修改，是文件夹名称 下载MCL MCL是模块化、轻量级且支持完全自定义的 mirai 加载器 用MCL可以省去很多事情，适合新手 以Linux为例这里使用的是最新版的MCL1234cd mclcurl -LJO https://github.com/iTXTech/mcl-installer/releases/download/ae9f946/mcl-installer-ae9f946-linux-amd64-muslchmod +x mcl-installer-ae9f946-linux-amd64-musl./mcl-installer-ae9f946-linux-amd64-musl 运行 Mcl-installer一般全部默认，然后等待安装完成即可12345678910Would you like to install Java? (Y/N, default: Y)是否安装Java，如果上面的检测结果输出的Java版本大于11即可，可输入N跳过安装，否则必须安装JavaJava version (11, 17, 18, default: 17): 选择Java版本安装，默认为Java 17JRE or JDK (1: JRE, 2: JDK, default: JRE): 选择JRE还是JDK安装，默认为JREBinary Architecture (default: x64): 选择架构安装，默认x64，Apple Silicon 请选择 aarch64如果操作系统为Windows并且需要使用 mirai-native，请选择 x32（而不是i386等其他名字）The latest stable version of iTXTech MCL is x.x.x 获取最新MCL并询问是否下载Would you like to download it? (Y/N, default: Y) Y：下载，N：取消 运行Mcl1./mcl 输入指令后看到这样的一个界面就是成功了123456789101112131415==================================[ Mirai consosle 2.14.0 ]=================================== __ __ __ __ ______ __| \\ / \\ \\ | \\/ \\ | \\| ▓▓\\ / ▓▓\\▓▓ ______ ______ \\▓▓ ▓▓▓▓▓▓\\ ______ _______ _______ ______ | ▓▓ ______| ▓▓▓\\ / ▓▓▓ \\/ \\ | \\| \\ ▓▓ \\▓▓/ \\| \\ / \\/ \\| ▓▓/ \\| ▓▓▓▓\\ ▓▓▓▓ ▓▓ ▓▓▓▓▓▓\\ \\▓▓▓▓▓▓\\ ▓▓ ▓▓ | ▓▓▓▓▓▓\\ ▓▓▓▓▓▓▓\\ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓\\ ▓▓ ▓▓▓▓▓▓\\| ▓▓\\▓▓ ▓▓ ▓▓ ▓▓ ▓▓ \\▓▓/ ▓▓ ▓▓ ▓▓ __| ▓▓ | ▓▓ ▓▓ | ▓▓\\▓▓ \\| ▓▓ | ▓▓ ▓▓ ▓▓ ▓▓| ▓▓ \\▓▓▓| ▓▓ ▓▓ ▓▓ | ▓▓▓▓▓▓▓ ▓▓ ▓▓__/ \\ ▓▓__/ ▓▓ ▓▓ | ▓▓_\\▓▓▓▓▓▓\\ ▓▓__/ ▓▓ ▓▓ ▓▓▓▓▓▓▓▓| ▓▓ \\▓ | ▓▓ ▓▓ ▓▓ \\▓▓ ▓▓ ▓▓\\▓▓ ▓▓\\▓▓ ▓▓ ▓▓ | ▓▓ ▓▓\\▓▓ ▓▓ ▓▓\\▓▓ \\ \\▓▓ \\▓▓\\▓▓\\▓▓ \\▓▓▓▓▓▓▓\\▓▓ \\▓▓▓▓▓▓ \\▓▓▓▓▓▓ \\▓▓ \\▓▓\\▓▓▓▓▓▓▓ \\▓▓▓▓▓▓ \\▓▓ \\▓▓▓▓▓▓▓2023-08-02 17:14:50 I/main: Backend: version 2.14.0, built on 2023-02-06 14:25:21.2023-08-02 17:14:50 I/main: Frontend Terminal: version 2.14.0, provided by Mamoe Technologies2023-08-02 17:14:50 I/main: Welcome to visit https://mirai.mamoe.net/ 部署签名服务由于QQ官方限制，需要配置第三方签名服务才能解决登陆和发消息的问题具体请参照mirai官方论坛，按照cssxsh大佬的方法来，即可解除限制，但QQ号有冻结的风险 引用站外地址 FixProtocolVersion 临时性协议修复插件 引用站外地址 unidbg-fetch-qsign1.1.3 使用方法 引用站外地址 fix-protocol-version fix-protocol-version Mirai相关链接 引用站外地址 MiraiForum https://mirai.mamoe.net/","summary":"介绍 Mirai 是一个在全平台下运行，提供 QQ Android 协议支持的高效率机器人库 引用声明一切开发旨在学习，请勿用于非法用途 mirai 是完全免费且开放源代码的软件，仅供学习和娱乐用途使用 mirai 不会通过任何方式强制收取费用，或对使用者提出物质条件 mirai 由整个开源社区维护，并不是属于某个个体的作品，所有贡献者都享有其作品的著作权。 前言 需要服务器，本篇用的是腾讯云上海区的2H2G服务器 本篇文章只是记录，不是教程，目前还不熟悉，不敢写教程,还请各位大佬指点 系统为Ubuntu 22.04.2 LTS 感谢Dorrhound赞助的服务器 正文更新依赖这里使用的是Finalshell，个人觉得挺好用的连上服务器后，更新依赖并创建文件夹12apt-get updatemkdir mcl #这里的mcl可以自行修改，是文件夹名称 下载MCL MCL是模块化、轻量级且支持完全自定义的 mirai 加载器 用MCL可以省去很多事情，适合新手 以Linux为例这里使用的是最新版的MCL1234cd mclcurl -LJO https://github.com/iTXTech/mcl-installer/releases/download/ae9f946/mcl-installer-ae9f946-linux-amd64-muslchmod +x mcl-installer-ae9f946-linux-amd64-musl./mcl-installer-ae9f946-linux-amd64-musl 运行 Mcl-installer一般全部默认，然后等待安装完成即可12345678910Would you like to install Java? (Y/N, default: Y)是否安装Java，如果上面的检测结果输出的Java版本大于11即可，可输入N跳过安装，否则必须安装JavaJava version (11, 17, 18, default: 17): 选择Java版本安装，默认为Java 17JRE or JDK (1: JRE, 2: JDK, default: JRE): 选择JRE还是JDK安装，默认为JREBinary Architecture (default: x64): 选择架构安装，默认x64，Apple Silicon 请选择 aarch64如果操作系统为Windows并且需要使用 mirai-native，请选择 x32（而不是i386等其他名字）The latest stable version of iTXTech MCL is x.x.x 获取最新MCL并询问是否下载Would you like to download it? (Y/N, default: Y) Y：下载，N：取消 运行Mcl1./mcl 输入指令后看到这样的一个界面就是成功了123456789101112131415==================================[ Mirai consosle 2.14.0 ]=================================== __ __ __ __ ______ __| \\ / \\ \\ | \\/ \\ | \\| ▓▓\\ / ▓▓\\▓▓ ______ ______ \\▓▓ ▓▓▓▓▓▓\\ ______ _______ _______ ______ | ▓▓ ______| ▓▓▓\\ / ▓▓▓ \\/ \\ | \\| \\ ▓▓ \\▓▓/ \\| \\ / \\/ \\| ▓▓/ \\| ▓▓▓▓\\ ▓▓▓▓ ▓▓ ▓▓▓▓▓▓\\ \\▓▓▓▓▓▓\\ ▓▓ ▓▓ | ▓▓▓▓▓▓\\ ▓▓▓▓▓▓▓\\ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓\\ ▓▓ ▓▓▓▓▓▓\\| ▓▓\\▓▓ ▓▓ ▓▓ ▓▓ ▓▓ \\▓▓/ ▓▓ ▓▓ ▓▓ __| ▓▓ | ▓▓ ▓▓ | ▓▓\\▓▓ \\| ▓▓ | ▓▓ ▓▓ ▓▓ ▓▓| ▓▓ \\▓▓▓| ▓▓ ▓▓ ▓▓ | ▓▓▓▓▓▓▓ ▓▓ ▓▓__/ \\ ▓▓__/ ▓▓ ▓▓ | ▓▓_\\▓▓▓▓▓▓\\ ▓▓__/ ▓▓ ▓▓ ▓▓▓▓▓▓▓▓| ▓▓ \\▓ | ▓▓ ▓▓ ▓▓ \\▓▓ ▓▓ ▓▓\\▓▓ ▓▓\\▓▓ ▓▓ ▓▓ | ▓▓ ▓▓\\▓▓ ▓▓ ▓▓\\▓▓ \\ \\▓▓ \\▓▓\\▓▓\\▓▓ \\▓▓▓▓▓▓▓\\▓▓ \\▓▓▓▓▓▓ \\▓▓▓▓▓▓ \\▓▓ \\▓▓\\▓▓▓▓▓▓▓ \\▓▓▓▓▓▓ \\▓▓ \\▓▓▓▓▓▓▓2023-08-02 17:14:50 I/main: Backend: version 2.14.0, built on 2023-02-06 14:25:21.2023-08-02 17:14:50 I/main: Frontend Terminal: version 2.14.0, provided by Mamoe Technologies2023-08-02 17:14:50 I/main: Welcome to visit https://mirai.mamoe.net/ 部署签名服务由于QQ官方限制，需要配置第三方签名服务才能解决登陆和发消息的问题具体请参照mirai官方论坛，按照cssxsh大佬的方法来，即可解除限制，但QQ号有冻结的风险 引用站外地址 FixProtocolVersion 临时性协议修复插件 引用站外地址 unidbg-fetch-qsign1.1.3 使用方法 引用站外地址 fix-protocol-version fix-protocol-version Mirai相关链接 引用站外地址 MiraiForum https://mirai.mamoe.net/","date_published":"2023-08-02T08:08:23.000Z","tags":["QQ机器人","java","java","Mirai","QQ机器人"]},{"id":"https://www.zxma.top/posts/9a06f4c1/","url":"https://www.zxma.top/posts/9a06f4c1/","title":"多吉云CDN自动刷新方案","content_html":"<details class=\"folding-tag\" green><summary> 点击查看更新记录 </summary>\n              <div class='content'>\n              <div class=\"timeline undefined\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新记录</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-6-7: 测试版CDN刷新方案1.0</p></div></div><div class='timeline-item-content'><p>依样画葫芦模仿空梦大佬书写更新脚本</p></div></div></div>\n              </div>\n            </details>\n<div class=\"note blue info flat\"><ol>\n<li>目前本方案方法比较折中，且有点笨，还请各位大佬指点</li>\n<li>由于目前不知道为什么，public无法输出.github文件夹，所以只能放在根目录</li>\n<li>参考了空梦大佬的教程，<a href=\"https://kmar.top/posts/a427ed12/\">https://kmar.top/posts/a427ed12/</a></li>\n<li>感谢<a href=\"https://github.com/dorrhound\">Dorrhound</a>的帮助</li>\n</ol>\n</div>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><ol>\n<li>思路是在博客根目录创建一个RefreshCDN.py为刷新脚本</li>\n<li>使用github的action去运行这个刷新脚本</li>\n<li>教程目前仅适用于多吉云，不过方法应该都适用</li>\n<li>如果你使用的是别的 CDN，则需要自行查阅 API 文档，然后编写相应的代码</li>\n</ol>\n<h2 id=\"教程正文\"><a href=\"#教程正文\" class=\"headerlink\" title=\"教程正文\"></a>教程正文</h2><div class=\"tip warning\"><ol>\n<li>在开始前，需要客官您已完成HEXO自动部署，如果未完成，参考<a href=\"https://butterfly.zhheo.com/efficiency.html#%E6%8E%A8%E9%80%81\">点我前往教程</a></li>\n<li>部署的仓库为源码仓库，并为私人仓库，请勿设为公开！！！以免暴露key</li>\n</ol>\n</div>\n<ol>\n<li><p>在<code>[根目录]</code>创建一个文件名为<code>RefreshCDN.py</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> hashlib <span class=\"keyword\">import</span> sha1</span><br><span class=\"line\"><span class=\"keyword\">import</span> hmac</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">dogecloud_api</span>(<span class=\"params\">api_path, data=&#123;&#125;, json_mode=<span class=\"literal\">False</span></span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    调用多吉云API</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param api_path:    调用的 API 接口地址，包含 URL 请求参数 QueryString，例如：/console/vfetch/add.json?url=xxx&amp;a=1&amp;b=2</span></span><br><span class=\"line\"><span class=\"string\">    :param data:        POST 的数据，字典，例如 &#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2&#125;，传递此参数表示不是 GET 请求而是 POST 请求</span></span><br><span class=\"line\"><span class=\"string\">    :param json_mode:   数据 data 是否以 JSON 格式请求，默认为 false 则使用表单形式（a=1&amp;b=2）</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :type api_path: string</span></span><br><span class=\"line\"><span class=\"string\">    :type data: dict</span></span><br><span class=\"line\"><span class=\"string\">    :type json_mode bool</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :return dict: 返回的数据</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 这里替换为你的多吉云永久 AccessKey 和 SecretKey，可在用户中心 - 密钥管理中查看</span></span><br><span class=\"line\">    <span class=\"comment\"># 请勿在客户端暴露 AccessKey 和 SecretKey，否则恶意用户将获得账号完全控制权</span></span><br><span class=\"line\">    access_key = <span class=\"string\">&#x27;你的AccessKey&#x27;</span></span><br><span class=\"line\">    secret_key = <span class=\"string\">&#x27;你的SecretKey&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    body = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    mime = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> json_mode:</span><br><span class=\"line\">        body = json.dumps(data)</span><br><span class=\"line\">        mime = <span class=\"string\">&#x27;application/json&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        body = urllib.parse.urlencode(data) <span class=\"comment\"># Python 2 可以直接用 urllib.urlencode</span></span><br><span class=\"line\">        mime = <span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class=\"line\">    sign_str = api_path + <span class=\"string\">&quot;\\n&quot;</span> + body</span><br><span class=\"line\">    signed_data = hmac.new(secret_key.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>), sign_str.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>), sha1)</span><br><span class=\"line\">    sign = signed_data.digest().<span class=\"built_in\">hex</span>()</span><br><span class=\"line\">    authorization = <span class=\"string\">&#x27;TOKEN &#x27;</span> + access_key + <span class=\"string\">&#x27;:&#x27;</span> + sign</span><br><span class=\"line\">    response = requests.post(<span class=\"string\">&#x27;https://api.dogecloud.com&#x27;</span> + api_path, data=body, headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;Authorization&#x27;</span>: authorization,</span><br><span class=\"line\">        <span class=\"string\">&#x27;Content-Type&#x27;</span>: mime</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response.json()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url_list = [</span><br><span class=\"line\">    <span class=\"string\">&#x27;https://xxxxx/&#x27;</span><span class=\"comment\"># xxx替换为你的博客域名</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">api = dogecloud_api(<span class=\"string\">&#x27;/cdn/refresh/add.json&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;rtype&#x27;</span>: <span class=\"string\">&#x27;path&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;urls&#x27;</span>: json.dumps(url_list)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">if</span> api[<span class=\"string\">&#x27;code&#x27;</span>] == <span class=\"number\">200</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(api[<span class=\"string\">&#x27;data&#x27;</span>][<span class=\"string\">&#x27;task_id&#x27;</span>])</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;api failed: &quot;</span> + api[<span class=\"string\">&#x27;msg&#x27;</span>]) <span class=\"comment\"># 失败</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>将其中的<code>access_key = &#39;你的AccessKey&#39;</code>,<code>secret_key = &#39;你的SecretKey&#39;</code>,替换为自己的key<br><code>&#39;https://xxxxx/&#39;</code>xxxxx替换为你的博客域名</p>\n</li>\n<li><p>创建目录<code>[根目录]\\.github\\workflows</code>已经有的可以略过<br>在<code>workflows</code>下新建<code>RefreshCDN.yml</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Refresh</span> <span class=\"string\">CDN</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">refresh-cdn:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装</span> <span class=\"string\">python</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"string\">&#x27;3.x&#x27;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装依赖</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">pip</span> <span class=\"string\">install</span> <span class=\"string\">requests</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">等待源站部署</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">sleep</span> <span class=\"string\">4m</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">刷新CDN</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">python</span> <span class=\"string\">RefreshCDN.py</span></span><br></pre></td></tr></table></figure>\n<p>这里用了个笨办法，等待4分钟后进行刷新<br>创建完后直接提交上去应该就行了</p>\n</li>\n</ol>\n","content_text":"点击查看更新记录 更新记录2024-6-7: 测试版CDN刷新方案1.0依样画葫芦模仿空梦大佬书写更新脚本 目前本方案方法比较折中，且有点笨，还请各位大佬指点 由于目前不知道为什么，public无法输出.github文件夹，所以只能放在根目录 参考了空梦大佬的教程，https://kmar.top/posts/a427ed12/ 感谢Dorrhound的帮助 前言 思路是在博客根目录创建一个RefreshCDN.py为刷新脚本 使用github的action去运行这个刷新脚本 教程目前仅适用于多吉云，不过方法应该都适用 如果你使用的是别的 CDN，则需要自行查阅 API 文档，然后编写相应的代码 教程正文 在开始前，需要客官您已完成HEXO自动部署，如果未完成，参考点我前往教程 部署的仓库为源码仓库，并为私人仓库，请勿设为公开！！！以免暴露key 在[根目录]创建一个文件名为RefreshCDN.py 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061from hashlib import sha1import hmacimport requestsimport jsonimport urllibimport osdef dogecloud_api(api_path, data=&#123;&#125;, json_mode=False): &quot;&quot;&quot; 调用多吉云API :param api_path: 调用的 API 接口地址，包含 URL 请求参数 QueryString，例如：/console/vfetch/add.json?url=xxx&amp;a=1&amp;b=2 :param data: POST 的数据，字典，例如 &#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2&#125;，传递此参数表示不是 GET 请求而是 POST 请求 :param json_mode: 数据 data 是否以 JSON 格式请求，默认为 false 则使用表单形式（a=1&amp;b=2） :type api_path: string :type data: dict :type json_mode bool :return dict: 返回的数据 &quot;&quot;&quot; # 这里替换为你的多吉云永久 AccessKey 和 SecretKey，可在用户中心 - 密钥管理中查看 # 请勿在客户端暴露 AccessKey 和 SecretKey，否则恶意用户将获得账号完全控制权 access_key = &#x27;你的AccessKey&#x27; secret_key = &#x27;你的SecretKey&#x27; body = &#x27;&#x27; mime = &#x27;&#x27; if json_mode: body = json.dumps(data) mime = &#x27;application/json&#x27; else: body = urllib.parse.urlencode(data) # Python 2 可以直接用 urllib.urlencode mime = &#x27;application/x-www-form-urlencoded&#x27; sign_str = api_path + &quot;\\n&quot; + body signed_data = hmac.new(secret_key.encode(&#x27;utf-8&#x27;), sign_str.encode(&#x27;utf-8&#x27;), sha1) sign = signed_data.digest().hex() authorization = &#x27;TOKEN &#x27; + access_key + &#x27;:&#x27; + sign response = requests.post(&#x27;https://api.dogecloud.com&#x27; + api_path, data=body, headers = &#123; &#x27;Authorization&#x27;: authorization, &#x27;Content-Type&#x27;: mime &#125;) return response.json()url_list = [ &#x27;https://xxxxx/&#x27;# xxx替换为你的博客域名]api = dogecloud_api(&#x27;/cdn/refresh/add.json&#x27;, &#123; &#x27;rtype&#x27;: &#x27;path&#x27;, &#x27;urls&#x27;: json.dumps(url_list)&#125;)if api[&#x27;code&#x27;] == 200: print(api[&#x27;data&#x27;][&#x27;task_id&#x27;])else: print(&quot;api failed: &quot; + api[&#x27;msg&#x27;]) # 失败 将其中的access_key = &#39;你的AccessKey&#39;,secret_key = &#39;你的SecretKey&#39;,替换为自己的key&#39;https://xxxxx/&#39;xxxxx替换为你的博客域名 创建目录[根目录]\\.github\\workflows已经有的可以略过在workflows下新建RefreshCDN.yml 1234567891011121314151617181920212223name: Refresh CDNon: push: branches: - masterjobs: refresh-cdn: runs-on: ubuntu-latest steps: - name: 安装 Node uses: actions/checkout@v2 - name: 安装 python uses: actions/setup-python@v2 with: python-version: &#x27;3.x&#x27; - name: 安装依赖 run: pip install requests - name: 等待源站部署 run: sleep 4m - name: 刷新CDN run: python RefreshCDN.py 这里用了个笨办法，等待4分钟后进行刷新创建完后直接提交上去应该就行了","summary":"点击查看更新记录 更新记录2024-6-7: 测试版CDN刷新方案1.0依样画葫芦模仿空梦大佬书写更新脚本 目前本方案方法比较折中，且有点笨，还请各位大佬指点 由于目前不知道为什么，public无法输出.github文件夹，所以只能放在根目录 参考了空梦大佬的教程，https://kmar.top/posts/a427ed12/ 感谢Dorrhound的帮助 前言 思路是在博客根目录创建一个RefreshCDN.py为刷新脚本 使用github的action去运行这个刷新脚本 教程目前仅适用于多吉云，不过方法应该都适用 如果你使用的是别的 CDN，则需要自行查阅 API 文档，然后编写相应的代码 教程正文 在开始前，需要客官您已完成HEXO自动部署，如果未完成，参考点我前往教程 部署的仓库为源码仓库，并为私人仓库，请勿设为公开！！！以免暴露key 在[根目录]创建一个文件名为RefreshCDN.py 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061from hashlib import sha1import hmacimport requestsimport jsonimport urllibimport osdef dogecloud_api(api_path, data=&#123;&#125;, json_mode=False): &quot;&quot;&quot; 调用多吉云API :param api_path: 调用的 API 接口地址，包含 URL 请求参数 QueryString，例如：/console/vfetch/add.json?url=xxx&amp;a=1&amp;b=2 :param data: POST 的数据，字典，例如 &#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2&#125;，传递此参数表示不是 GET 请求而是 POST 请求 :param json_mode: 数据 data 是否以 JSON 格式请求，默认为 false 则使用表单形式（a=1&amp;b=2） :type api_path: string :type data: dict :type json_mode bool :return dict: 返回的数据 &quot;&quot;&quot; # 这里替换为你的多吉云永久 AccessKey 和 SecretKey，可在用户中心 - 密钥管理中查看 # 请勿在客户端暴露 AccessKey 和 SecretKey，否则恶意用户将获得账号完全控制权 access_key = &#x27;你的AccessKey&#x27; secret_key = &#x27;你的SecretKey&#x27; body = &#x27;&#x27; mime = &#x27;&#x27; if json_mode: body = json.dumps(data) mime = &#x27;application/json&#x27; else: body = urllib.parse.urlencode(data) # Python 2 可以直接用 urllib.urlencode mime = &#x27;application/x-www-form-urlencoded&#x27; sign_str = api_path + &quot;\\n&quot; + body signed_data = hmac.new(secret_key.encode(&#x27;utf-8&#x27;), sign_str.encode(&#x27;utf-8&#x27;), sha1) sign = signed_data.digest().hex() authorization = &#x27;TOKEN &#x27; + access_key + &#x27;:&#x27; + sign response = requests.post(&#x27;https://api.dogecloud.com&#x27; + api_path, data=body, headers = &#123; &#x27;Authorization&#x27;: authorization, &#x27;Content-Type&#x27;: mime &#125;) return response.json()url_list = [ &#x27;https://xxxxx/&#x27;# xxx替换为你的博客域名]api = dogecloud_api(&#x27;/cdn/refresh/add.json&#x27;, &#123; &#x27;rtype&#x27;: &#x27;path&#x27;, &#x27;urls&#x27;: json.dumps(url_list)&#125;)if api[&#x27;code&#x27;] == 200: print(api[&#x27;data&#x27;][&#x27;task_id&#x27;])else: print(&quot;api failed: &quot; + api[&#x27;msg&#x27;]) # 失败 将其中的access_key = &#39;你的AccessKey&#39;,secret_key = &#39;你的SecretKey&#39;,替换为自己的key&#39;https://xxxxx/&#39;xxxxx替换为你的博客域名 创建目录[根目录]\\.github\\workflows已经有的可以略过在workflows下新建RefreshCDN.yml 1234567891011121314151617181920212223name: Refresh CDNon: push: branches: - masterjobs: refresh-cdn: runs-on: ubuntu-latest steps: - name: 安装 Node uses: actions/checkout@v2 - name: 安装 python uses: actions/setup-python@v2 with: python-version: &#x27;3.x&#x27; - name: 安装依赖 run: pip install requests - name: 等待源站部署 run: sleep 4m - name: 刷新CDN run: python RefreshCDN.py 这里用了个笨办法，等待4分钟后进行刷新创建完后直接提交上去应该就行了","date_published":"2023-06-07T03:10:16.000Z","tags":["笔记","分享","CDN","多吉云","python"]},{"id":"https://www.zxma.top/posts/4c8787c6/","url":"https://www.zxma.top/posts/4c8787c6/","title":"Butterfly主题引入Dplayer播放器，并适配pjax","content_html":"<details class=\"folding-tag\" green><summary> 点击查看更新记录 </summary>\n              <div class='content'>\n              <div class=\"timeline undefined\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新记录</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-6-6: 适配方案01</p></div></div><div class='timeline-item-content'><p>依样画葫芦尝试pjax适配</p></div></div></div>\n              </div>\n            </details>\n<div class=\"note blue info flat\"><p>效果预览<br><img src=\"https://bu.dusays.com/2023/06/06/647edf5fab7c8.png\" alt=\"1686036313532.png\"></p>\n</div>\n<h1 id=\"魔改正文\"><a href=\"#魔改正文\" class=\"headerlink\" title=\"魔改正文\"></a>魔改正文</h1><div class=\"note warning flat\"><p>本方案目前只是根据原有的Aplayer播放器适配进行依样画葫芦<br>如果有更好的方法，欢迎各位看官提出</p>\n</div>\n<details class=\"folding-tag\" color open><summary> 点击查看魔改正文 </summary>\n              <div class='content'>\n              <ol><li><p>在博客根目录打开<code>CMD</code>，输入<code>npm</code>安装指令，安装Dplayer插件</p><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-tag-dplayer --save</span><br></pre></td></tr></table></figure></li><li><p>新建<code>[根目录]\\themes\\butterfly\\layout\\includes\\third-party\\dplayer.pug</code></p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">script(src=url_for(theme.asset.dplayer_js))</span><br></pre></td></tr></table></figure></li><li><p>修改<code>[根目录]\\themes\\butterfly\\layout\\includes\\additional-js.pug</code>在大约53行的位置</p><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  if theme.aplayerInject &amp;&amp; theme.aplayerInject.enable</span><br><span class=\"line\">    if theme.pjax.enable || theme.aplayerInject.per_page</span><br><span class=\"line\">      include ./third-party/aplayer.pug</span><br><span class=\"line\"><span class=\"addition\">+     include ./third-party/dplayer.pug</span></span><br><span class=\"line\">    else if page.aplayer</span><br><span class=\"line\">      include ./third-party/aplayer.pug</span><br><span class=\"line\"><span class=\"addition\">+     include ./third-party/dplayer.pug</span></span><br></pre></td></tr></table></figure></li><li><p>修改<code>[根目录]\\themes\\butterfly\\layout\\includes\\third-party\\pjax.pug</code>在大约41行下面的位置，依样画葫芦，添加适配代码</p><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    if (window.aplayers) &#123;</span><br><span class=\"line\">      for (let i = 0; i &lt; window.aplayers.length; i++) &#123;</span><br><span class=\"line\">        if (!window.aplayers[i].options.fixed) &#123;</span><br><span class=\"line\">          window.aplayers[i].destroy()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+   if (window.dplayers) &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+     for (let i = 0; i &lt; window.dplayers.length; i++) &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+       if (!window.dplayers[i].options.fixed) &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+         window.dplayers[i].destroy()</span></span><br><span class=\"line\"><span class=\"addition\">+       &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+     &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+   &#125;</span></span><br></pre></td></tr></table></figure></li><li><p>最后打开<code>[根目录]\\_config.butterfly.yml</code>添加CDN配置项</p><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  option:</span><br><span class=\"line\">    main_css: /css/index.css</span><br><span class=\"line\">    main: /js/main.js</span><br><span class=\"line\">    utils: /js/utils.js</span><br><span class=\"line\"><span class=\"addition\">+   #dplayer播放器</span></span><br><span class=\"line\"><span class=\"addition\">+   dplayer_js: https://npm.elemecdn.com/dplayer@1.26.0/dist/DPlayer.min.js</span></span><br></pre></td></tr></table></figure></li></ol>\n              </div>\n            </details>\n<h1 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h1><p>详情见官方文档<br><div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://bu.dusays.com/2023/06/06/647ef5bc9f72d.png\">\n    <div class=\"tag-link-tips\">引用站外地址</div>\n    <div class=\"tag-link-bottom\">\n        <div class=\"tag-link-left\" style=\"\">\n          <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n        </div>\n        <div class=\"tag-link-right\">\n            <div class=\"tag-link-title\">hexo-tag-dplayer</div>\n            <div class=\"tag-link-sitename\"> https://github.com/MoePlayer/hexo-tag-dplayer</div>\n        </div>\n        <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n    </div>\n    </a></div></p>\n<ol>\n<li><p>官方举例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% dplayer &quot;url=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4&quot; &quot;addition=https://dplayer.daoapp.io/bilibili?aid=4157142&quot; &quot;api=https://api.prprpr.me/dplayer/&quot; &quot;pic=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.jpg&quot; &quot;id=9E2E3368B56CDBB4&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; %&#125;</span><br><span class=\"line\">&#123;% dplayer &#x27;url=some.mp4&#x27; &quot;id=someid&quot; &quot;api=https://api.prprpr.me/dplayer/&quot; &quot;addition=/some.json&quot; &#x27;code=player.on(&quot;loadstart&quot;,function()&#123;console.log(&quot;loadstart&quot;)&#125;)&#x27; &quot;autoplay&quot; %&#125; </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>本人使用的：</p>\n<div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://npm.elemecdn.com/zxma-siteassets@1.0.21/img/siteicon/favicon.png\">\n    <div class=\"tag-link-tips\">引用站外地址</div>\n    <div class=\"tag-link-bottom\">\n        <div class=\"tag-link-left\" style=\"\">\n          <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n        </div>\n        <div class=\"tag-link-right\">\n            <div class=\"tag-link-title\">博客使用Dplayer播放器</div>\n            <div class=\"tag-link-sitename\"> /posts/28820/</div>\n        </div>\n        <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n    </div>\n    </a></div></li>\n</ol>\n","content_text":"点击查看更新记录 更新记录2024-6-6: 适配方案01依样画葫芦尝试pjax适配 效果预览 魔改正文本方案目前只是根据原有的Aplayer播放器适配进行依样画葫芦如果有更好的方法，欢迎各位看官提出 点击查看魔改正文 在博客根目录打开CMD，输入npm安装指令，安装Dplayer插件1npm install hexo-tag-dplayer --save新建[根目录]\\themes\\butterfly\\layout\\includes\\third-party\\dplayer.pug1script(src=url_for(theme.asset.dplayer_js))修改[根目录]\\themes\\butterfly\\layout\\includes\\additional-js.pug在大约53行的位置1234567 if theme.aplayerInject &amp;&amp; theme.aplayerInject.enable if theme.pjax.enable || theme.aplayerInject.per_page include ./third-party/aplayer.pug+ include ./third-party/dplayer.pug else if page.aplayer include ./third-party/aplayer.pug+ include ./third-party/dplayer.pug修改[根目录]\\themes\\butterfly\\layout\\includes\\third-party\\pjax.pug在大约41行下面的位置，依样画葫芦，添加适配代码123456789101112131415 if (window.aplayers) &#123; for (let i = 0; i &lt; window.aplayers.length; i++) &#123; if (!window.aplayers[i].options.fixed) &#123; window.aplayers[i].destroy() &#125; &#125; &#125;+ if (window.dplayers) &#123;+ for (let i = 0; i &lt; window.dplayers.length; i++) &#123;+ if (!window.dplayers[i].options.fixed) &#123;+ window.dplayers[i].destroy()+ &#125;+ &#125;+ &#125;最后打开[根目录]\\_config.butterfly.yml添加CDN配置项123456 option: main_css: /css/index.css main: /js/main.js utils: /js/utils.js+ #dplayer播放器+ dplayer_js: https://npm.elemecdn.com/dplayer@1.26.0/dist/DPlayer.min.js 使用方式详情见官方文档 引用站外地址 hexo-tag-dplayer https://github.com/MoePlayer/hexo-tag-dplayer 官方举例： 12&#123;% dplayer &quot;url=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4&quot; &quot;addition=https://dplayer.daoapp.io/bilibili?aid=4157142&quot; &quot;api=https://api.prprpr.me/dplayer/&quot; &quot;pic=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.jpg&quot; &quot;id=9E2E3368B56CDBB4&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; %&#125;&#123;% dplayer &#x27;url=some.mp4&#x27; &quot;id=someid&quot; &quot;api=https://api.prprpr.me/dplayer/&quot; &quot;addition=/some.json&quot; &#x27;code=player.on(&quot;loadstart&quot;,function()&#123;console.log(&quot;loadstart&quot;)&#125;)&#x27; &quot;autoplay&quot; %&#125; 本人使用的： 引用站外地址 博客使用Dplayer播放器 /posts/28820/","summary":"点击查看更新记录 更新记录2024-6-6: 适配方案01依样画葫芦尝试pjax适配 效果预览 魔改正文本方案目前只是根据原有的Aplayer播放器适配进行依样画葫芦如果有更好的方法，欢迎各位看官提出 点击查看魔改正文 在博客根目录打开CMD，输入npm安装指令，安装Dplayer插件1npm install hexo-tag-dplayer --save新建[根目录]\\themes\\butterfly\\layout\\includes\\third-party\\dplayer.pug1script(src=url_for(theme.asset.dplayer_js))修改[根目录]\\themes\\butterfly\\layout\\includes\\additional-js.pug在大约53行的位置1234567 if theme.aplayerInject &amp;&amp; theme.aplayerInject.enable if theme.pjax.enable || theme.aplayerInject.per_page include ./third-party/aplayer.pug+ include ./third-party/dplayer.pug else if page.aplayer include ./third-party/aplayer.pug+ include ./third-party/dplayer.pug修改[根目录]\\themes\\butterfly\\layout\\includes\\third-party\\pjax.pug在大约41行下面的位置，依样画葫芦，添加适配代码123456789101112131415 if (window.aplayers) &#123; for (let i = 0; i &lt; window.aplayers.length; i++) &#123; if (!window.aplayers[i].options.fixed) &#123; window.aplayers[i].destroy() &#125; &#125; &#125;+ if (window.dplayers) &#123;+ for (let i = 0; i &lt; window.dplayers.length; i++) &#123;+ if (!window.dplayers[i].options.fixed) &#123;+ window.dplayers[i].destroy()+ &#125;+ &#125;+ &#125;最后打开[根目录]\\_config.butterfly.yml添加CDN配置项123456 option: main_css: /css/index.css main: /js/main.js utils: /js/utils.js+ #dplayer播放器+ dplayer_js: https://npm.elemecdn.com/dplayer@1.26.0/dist/DPlayer.min.js 使用方式详情见官方文档 引用站外地址 hexo-tag-dplayer https://github.com/MoePlayer/hexo-tag-dplayer 官方举例： 12&#123;% dplayer &quot;url=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4&quot; &quot;addition=https://dplayer.daoapp.io/bilibili?aid=4157142&quot; &quot;api=https://api.prprpr.me/dplayer/&quot; &quot;pic=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.jpg&quot; &quot;id=9E2E3368B56CDBB4&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; %&#125;&#123;% dplayer &#x27;url=some.mp4&#x27; &quot;id=someid&quot; &quot;api=https://api.prprpr.me/dplayer/&quot; &quot;addition=/some.json&quot; &#x27;code=player.on(&quot;loadstart&quot;,function()&#123;console.log(&quot;loadstart&quot;)&#125;)&#x27; &quot;autoplay&quot; %&#125; 本人使用的： 引用站外地址 博客使用Dplayer播放器 /posts/28820/","date_published":"2023-06-06T07:16:44.000Z","tags":["笔记","分享","视频","Dplayer"]},{"id":"https://www.zxma.top/posts/438365eb/","url":"https://www.zxma.top/posts/438365eb/","title":"免费部署Alist目录列表程序(已失效)","content_html":"<div class=\"note info flat\"><p>写的比较仓促，有什么不足的地方，还请大家多多指点。评论区欢迎留言~</p>\n</div>\n<div class=\"note warning flat\"><ol>\n<li>2022/10/30新增下方的环境变量示例</li>\n<li>感谢<a href=\"https://cuojue.org/\">@WeiCN</a>在评论区的错误指正</li>\n<li>错误指正后，v3版本也能正常部署使用了</li>\n<li>2023/3/16恢复图片链接，原深海图床CDN因未知原因无法访问，已把仅剩的缩略图迁移至去不图床，图片可能会比较模糊</li>\n</ol>\n</div>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Alist是一款支持多种存储的目录文件列表程序，后端基于<code>gin</code>，前端使用<code>react</code></p>\n<div class=\"gallery\">\n  <div class=\"fj-gallery page_img_lazyload  data\" data-rowHeight=\"220\" data-limit=\"10\">\n    <span class=\"gallery-data\">[{\"url\":\"https://bu.dusays.com/2023/03/16/6413013a46fe1.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/6413010ad3013.png\",\"alt\":\"\"}]</span>\n  </div><button class=\"gallery-load-more\" style=\"opacity:0\">\n  <span>加载更多</span>\n  <i class=\"anzhiyufont anzhiyu-icon-arrow-down\"></i>\n  </button></div>\n<div class=\"btns rounded grid5\">\n            <a class=\"button no-text-decoration\" href='https://alist-doc.nn.ci/' title='查看文档'><i class='anzhiyufont anzhiyu-icon-book'></i>查看文档</a>\n<a class=\"button no-text-decoration\" href='https://github.com/Xhofe/alist' title='查看源码'><i class='anzhiyufont anzhiyu-icon-bolt'></i>查看源码</a>\n          </div>\n<hr>\n<h1 id=\"部署前准备\"><a href=\"#部署前准备\" class=\"headerlink\" title=\"部署前准备\"></a>部署前准备</h1><div class=\"note primary flat\"><ol>\n<li>一个<svg class=\"icon\" style=\"width:1.4em; height:1.4em\" aria-hidden=\"true\"><use xlink:href=\"#icon-GitHub\"></use></svg>Github账号</li>\n<li>Fork一份<a href=\"https://github.com/alist-org/alist-render\">Alist-render</a>的仓库</li>\n<li>一个render账号</li>\n<li>一个数据库，可选<code>sqlite3</code>、<code>mysql</code>、<code>postgres</code></li>\n</ol>\n</div>\n<hr>\n<h2 id=\"render账号\"><a href=\"#render账号\" class=\"headerlink\" title=\"render账号\"></a>render账号</h2><p>点击进入<a href=\"https://render.com/\">render</a>官网<br>点击右上角 <code>GET STARTED</code>,使用Github进行注册或登录<br>按照网页的提示完成注册后进入控制面板<br><div class=\"gallery\">\n  <div class=\"fj-gallery page_img_lazyload  data\" data-rowHeight=\"220\" data-limit=\"10\">\n    <span class=\"gallery-data\">[{\"url\":\"https://bu.dusays.com/2023/03/16/641301642afa0.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/64130188a77c9.png\",\"alt\":\"\"}]</span>\n  </div><button class=\"gallery-load-more\" style=\"opacity:0\">\n  <span>加载更多</span>\n  <i class=\"anzhiyufont anzhiyu-icon-arrow-down\"></i>\n  </button></div></p>\n<h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>点击进入<a href=\"https://www.elephantsql.com/\">elephantsql</a>官网<br>点击位于页面中央的<code>Get a managed database today</code>，选择海龟样子的<code>Free</code>计划<br>会进入登陆页面，可以使用Github进行授权登陆，然后信息随便填一下就行<br>进入控制面板后创建数据库，计划记得选择<code>Free</code><br>这样我们就获得了一个免费的<code>postgres</code>类型的数据库<br><div class=\"gallery\">\n  <div class=\"fj-gallery page_img_lazyload  data\" data-rowHeight=\"220\" data-limit=\"10\">\n    <span class=\"gallery-data\">[{\"url\":\"https://bu.dusays.com/2023/03/16/641301d4e12ac.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/641301efa6837.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/641302067ba2a.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/64130228cfac7.png\",\"alt\":\"\"}]</span>\n  </div><button class=\"gallery-load-more\" style=\"opacity:0\">\n  <span>加载更多</span>\n  <i class=\"anzhiyufont anzhiyu-icon-arrow-down\"></i>\n  </button></div><br><div class=\"note info flat\"><p>数据库的信息最好记下来备用，等一会要填</p>\n</div><br><div class=\"note warning flat\"><p>截图中的数据库在文章发布后已被删除</p>\n</div></p>\n<hr>\n<h1 id=\"部署Alist\"><a href=\"#部署Alist\" class=\"headerlink\" title=\"部署Alist\"></a>部署Alist</h1><h2 id=\"拉取仓库\"><a href=\"#拉取仓库\" class=\"headerlink\" title=\"拉取仓库\"></a>拉取仓库</h2><p>进入<a href=\"https://dashboard.render.com/\">render</a>的控制台，点击<code>New+</code>，选择<code>Web Service</code><br><div class=\"gallery\">\n  <div class=\"fj-gallery page_img_lazyload  data\" data-rowHeight=\"220\" data-limit=\"10\">\n    <span class=\"gallery-data\">[{\"url\":\"https://bu.dusays.com/2023/03/16/64130252835b9.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/64130276670f6.png\",\"alt\":\"\"}]</span>\n  </div><button class=\"gallery-load-more\" style=\"opacity:0\">\n  <span>加载更多</span>\n  <i class=\"anzhiyufont anzhiyu-icon-arrow-down\"></i>\n  </button></div><br>选择刚刚Fork的<a href=\"https://github.com/alist-org/alist-render\">Alist-render</a>的仓库<br>点击，进入部署页面，自己取个名字，然后先什么都不要动，往下拉，拉到最底下</p>\n<h2 id=\"设置环境变量\"><a href=\"#设置环境变量\" class=\"headerlink\" title=\"设置环境变量\"></a>设置环境变量</h2><p>在左下角<code>Create Web Service</code>的按钮上边，有个<code>Advanced</code>按钮，点击<br>然后在点击<code>Add Environment Variable</code>开始添加环境变量<br>这边可以参考我之前在Alist社区的对话<br><div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://github.com/alist-org/alist/discussions/931\">\n    <div class=\"tag-link-tips\">引用站外地址</div>\n    <div class=\"tag-link-bottom\">\n        <div class=\"tag-link-left\" style=\"\">\n          <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n        </div>\n        <div class=\"tag-link-right\">\n            <div class=\"tag-link-title\">koyeb怎么连接数据库</div>\n            <div class=\"tag-link-sitename\">github</div>\n        </div>\n        <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n    </div>\n    </a></div><br><div class=\"gallery\">\n  <div class=\"fj-gallery page_img_lazyload  data\" data-rowHeight=\"220\" data-limit=\"10\">\n    <span class=\"gallery-data\">[{\"url\":\"https://bu.dusays.com/2023/03/16/6413029066de4.png\",\"alt\":\"\"}]</span>\n  </div><button class=\"gallery-load-more\" style=\"opacity:0\">\n  <span>加载更多</span>\n  <i class=\"anzhiyufont anzhiyu-icon-arrow-down\"></i>\n  </button></div><br>参考表格对应填写变量参数，只要把<code>DB_HOST</code>，<code>DB_NAME</code>，<code>DB_PASS</code>，<code>DB_USER</code>给改成自己的就可以了</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">数据库对应</th>\n<th style=\"text-align:center\">变量参数</th>\n<th style=\"text-align:center\">示例参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Server</td>\n<td style=\"text-align:center\">DB_HOST</td>\n<td style=\"text-align:center\">queenie.db.elephantsql.com</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">User &amp; Default database</td>\n<td style=\"text-align:center\">DB_NAME</td>\n<td style=\"text-align:center\">bkqgx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Password</td>\n<td style=\"text-align:center\">DB_PASS</td>\n<td style=\"text-align:center\">5CqBjEVZWdaaad2333aadadadadN3Clo</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">DB_PORT</td>\n<td style=\"text-align:center\">5432</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">DB_SSL_MODE</td>\n<td style=\"text-align:center\">disable</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">DB_TYPE</td>\n<td style=\"text-align:center\">postgres</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">User &amp; Default database</td>\n<td style=\"text-align:center\">DB_USER</td>\n<td style=\"text-align:center\">bkqgx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">PORT</td>\n<td style=\"text-align:center\">8080</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"note warning flat\"><p>填完检查一下，一共8个变量，好了就可以点击<code>Create Web Service</code>开始部署了，大概1~2分钟可以看到成果</p>\n</div>\n<div class=\"note warning flat\"><ol>\n<li>2022/10/30新增下方的环境变量示例，供大家参考↓↓↓</li>\n<li>感谢<a href=\"https://cuojue.org/\">@WeiCN</a>在评论区的错误指正</li>\n<li>错误指正后，v3版本也能正常部署使用了</li>\n</ol>\n</div>\n<h2 id=\"环境变量示例\"><a href=\"#环境变量示例\" class=\"headerlink\" title=\"环境变量示例\"></a>环境变量示例</h2><div class=\"tabs\" id=\"kanbanniang\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab \" data-href=\"kanbanniang-1\">参数示例</button><button type=\"button\" class=\"tab \" data-href=\"kanbanniang-2\">文字示例</button><button type=\"button\" class=\"tab  active\" data-href=\"kanbanniang-3\">关于sslmode</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content\" id=\"kanbanniang-1\"><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量参数</th>\n<th style=\"text-align:center\">示例参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">DB_HOST</td>\n<td style=\"text-align:center\">queenie.db.elephantsql.com</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DB_NAME</td>\n<td style=\"text-align:center\">bkqgx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DB_PASS</td>\n<td style=\"text-align:center\">5CqBjEVZWdaaad2333aadadadadN3Clo</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DB_PORT</td>\n<td style=\"text-align:center\">5432</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DB_SSL_MODE</td>\n<td style=\"text-align:center\">disable</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DB_TYPE</td>\n<td style=\"text-align:center\">postgres</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DB_USER</td>\n<td style=\"text-align:center\">bkqgx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PORT</td>\n<td style=\"text-align:center\">8080</td>\n</tr>\n</tbody>\n</table>\n</div></div><div class=\"tab-item-content\" id=\"kanbanniang-2\"><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量参数</th>\n<th style=\"text-align:center\">示例参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">DB_HOST</td>\n<td style=\"text-align:center\">数据库地址</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DB_NAME</td>\n<td style=\"text-align:center\">数据库名字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DB_PASS</td>\n<td style=\"text-align:center\">数据库密码</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DB_PORT</td>\n<td style=\"text-align:center\">数据库端口</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DB_SSL_MODE</td>\n<td style=\"text-align:center\">SSL模式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DB_TYPE</td>\n<td style=\"text-align:center\">数据库类型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DB_USER</td>\n<td style=\"text-align:center\">数据库用户名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PORT</td>\n<td style=\"text-align:center\">端口</td>\n</tr>\n</tbody>\n</table>\n</div></div><div class=\"tab-item-content active\" id=\"kanbanniang-3\"><p>DB_SSL_MODE这个变量我也不是很清楚，有错误的可以评论区指正，根据官方文档来看</p>\n<ol>\n<li>sqlite3数据库：请忽略该参数</li>\n<li>mysql数据库：参数有<code>true</code>, <code>false</code>, <code>skip-verify</code>, <code>preferred</code>,选一个填</li>\n<li>postgres数据库：参数有<code>disable</code>，<code>allow</code>，<code>prefer</code>，<code>require</code>，<code>verify-full</code>，选一个填</li>\n</ol>\n<p>我用的postgres数据库填的是<code>disable</code>，就是没用SSL</p></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"anzhiyufont anzhiyu-icon-arrow-up\"></i></button></div></div>\n<h1 id=\"评论区疑难解答\"><a href=\"#评论区疑难解答\" class=\"headerlink\" title=\"评论区疑难解答\"></a>评论区疑难解答</h1><div class=\"tabs\" id=\"zhangmi\"><ul class=\"nav-tabs\"><button type=\"button\" class=\"tab  active\" data-href=\"zhangmi-1\">账密未输出</button><button type=\"button\" class=\"tab \" data-href=\"zhangmi-2\">保持唤醒</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"zhangmi-1\"><p>如果你是已连接数据库了，那么你的密码应该已经写入数据库了，所以他不会再显示了，需要你自己去数据库看用户名和密码<br>如果你使用的是<a href=\"https://www.elephantsql.com/\">elephantsql</a> 数据库<br>前往你自己的 <a href=\"https://www.elephantsql.com/\">elephantsql</a> 数据库，点击侧边栏的 <code>Browser</code> 之后输入 <code>SELECT * FROM &quot;public&quot;.&quot;x_users&quot; LIMIT 100</code><br>会有一行 <code>username</code> 名为 <code>admin</code> 的，后面就是密码，<code>admin</code> 就是用户名<br><img src=\"https://bu.dusays.com/2022/12/05/638dcf8bb852a.png\" alt=\"1670238084349-87e699bc8702c63c9c8182ab8b1e1440.png\"></p>\n<p>或者点 <code>Table queries</code>，再点 <code>x_user</code> 也是可以的<br><img src=\"https://bu.dusays.com/2022/12/05/638dcfaa95816.png\" alt=\"1670238119405-87e699bc8702c63c9c8182ab8b1e1440.png\"></p></div><div class=\"tab-item-content\" id=\"zhangmi-2\"><p>由于render 15分钟没访问会休眠，所以我们可以注册一个<a href=\"https://uptimerobot.com/\">uptimerobot</a>或<a href=\"https://www.checklyhq.com/\">checklyhq</a>类似的这种监视网站，添加一个监控，24小时定时访问render上的项目，render就不会休眠了</p>\n<div class=\"note info flat\"><p>render原本的免费计划是每月允许总共使用750小时，似乎是不计流量的，就部署一个项目来说完全够用。但是render官方宣布定价将从 2023 年 1 月 1 日开始更改，从每月使用750小时，改为了每月免费带宽100GB的流量。</p>\n</div></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"anzhiyufont anzhiyu-icon-arrow-up\"></i></button></div></div>\n<hr>\n<h1 id=\"示例站点\"><a href=\"#示例站点\" class=\"headerlink\" title=\"示例站点\"></a>示例站点</h1><div class=\"site-card-group\"><a class=\"site-card\" href=\"https://alist.nn.ci/\" data-title=官方演示Demo><div class=\"wrapper cover\"><img class=\"cover fadeIn\" src=\"https://bu.dusays.com/2023/03/16/6413010ad3013.png\"/></div><div class=\"info\"><img class=\"flink-avatar\" src=\"https://bu.dusays.com/2023/03/16/641302b110384.png\"/><span class=\"site-title\">🗂️ Alist演示站</span></div></a>\n<a class=\"site-card\" href=\"https://pan.zxma.top\" data-title=个人Alist站点><div class=\"wrapper cover\"><img class=\"cover fadeIn\" src=\"https://bu.dusays.com/2023/03/16/6413010ad3013.png\"/></div><div class=\"info\"><img class=\"flink-avatar\" src=\"https://bu.dusays.com/2023/03/16/641302b110384.png\"/><span class=\"site-title\">檐牙的小云盘</span></div></a></div>\n","content_text":"写的比较仓促，有什么不足的地方，还请大家多多指点。评论区欢迎留言~ 2022/10/30新增下方的环境变量示例 感谢@WeiCN在评论区的错误指正 错误指正后，v3版本也能正常部署使用了 2023/3/16恢复图片链接，原深海图床CDN因未知原因无法访问，已把仅剩的缩略图迁移至去不图床，图片可能会比较模糊 简介Alist是一款支持多种存储的目录文件列表程序，后端基于gin，前端使用react [{\"url\":\"https://bu.dusays.com/2023/03/16/6413013a46fe1.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/6413010ad3013.png\",\"alt\":\"\"}] 加载更多 查看文档 查看源码 部署前准备 一个Github账号 Fork一份Alist-render的仓库 一个render账号 一个数据库，可选sqlite3、mysql、postgres render账号点击进入render官网点击右上角 GET STARTED,使用Github进行注册或登录按照网页的提示完成注册后进入控制面板 [{\"url\":\"https://bu.dusays.com/2023/03/16/641301642afa0.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/64130188a77c9.png\",\"alt\":\"\"}] 加载更多 数据库点击进入elephantsql官网点击位于页面中央的Get a managed database today，选择海龟样子的Free计划会进入登陆页面，可以使用Github进行授权登陆，然后信息随便填一下就行进入控制面板后创建数据库，计划记得选择Free这样我们就获得了一个免费的postgres类型的数据库 [{\"url\":\"https://bu.dusays.com/2023/03/16/641301d4e12ac.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/641301efa6837.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/641302067ba2a.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/64130228cfac7.png\",\"alt\":\"\"}] 加载更多 数据库的信息最好记下来备用，等一会要填 截图中的数据库在文章发布后已被删除 部署Alist拉取仓库进入render的控制台，点击New+，选择Web Service [{\"url\":\"https://bu.dusays.com/2023/03/16/64130252835b9.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/64130276670f6.png\",\"alt\":\"\"}] 加载更多 选择刚刚Fork的Alist-render的仓库点击，进入部署页面，自己取个名字，然后先什么都不要动，往下拉，拉到最底下 设置环境变量在左下角Create Web Service的按钮上边，有个Advanced按钮，点击然后在点击Add Environment Variable开始添加环境变量这边可以参考我之前在Alist社区的对话 引用站外地址 koyeb怎么连接数据库 github [{\"url\":\"https://bu.dusays.com/2023/03/16/6413029066de4.png\",\"alt\":\"\"}] 加载更多 参考表格对应填写变量参数，只要把DB_HOST，DB_NAME，DB_PASS，DB_USER给改成自己的就可以了 数据库对应 变量参数 示例参数 Server DB_HOST queenie.db.elephantsql.com User &amp; Default database DB_NAME bkqgx Password DB_PASS 5CqBjEVZWdaaad2333aadadadadN3Clo DB_PORT 5432 DB_SSL_MODE disable DB_TYPE postgres User &amp; Default database DB_USER bkqgx PORT 8080 填完检查一下，一共8个变量，好了就可以点击Create Web Service开始部署了，大概1~2分钟可以看到成果 2022/10/30新增下方的环境变量示例，供大家参考↓↓↓ 感谢@WeiCN在评论区的错误指正 错误指正后，v3版本也能正常部署使用了 环境变量示例参数示例文字示例关于sslmode 变量参数 示例参数 DB_HOST queenie.db.elephantsql.com DB_NAME bkqgx DB_PASS 5CqBjEVZWdaaad2333aadadadadN3Clo DB_PORT 5432 DB_SSL_MODE disable DB_TYPE postgres DB_USER bkqgx PORT 8080 变量参数 示例参数 DB_HOST 数据库地址 DB_NAME 数据库名字 DB_PASS 数据库密码 DB_PORT 数据库端口 DB_SSL_MODE SSL模式 DB_TYPE 数据库类型 DB_USER 数据库用户名 PORT 端口 DB_SSL_MODE这个变量我也不是很清楚，有错误的可以评论区指正，根据官方文档来看 sqlite3数据库：请忽略该参数 mysql数据库：参数有true, false, skip-verify, preferred,选一个填 postgres数据库：参数有disable，allow，prefer，require，verify-full，选一个填 我用的postgres数据库填的是disable，就是没用SSL 评论区疑难解答账密未输出保持唤醒如果你是已连接数据库了，那么你的密码应该已经写入数据库了，所以他不会再显示了，需要你自己去数据库看用户名和密码如果你使用的是elephantsql 数据库前往你自己的 elephantsql 数据库，点击侧边栏的 Browser 之后输入 SELECT * FROM &quot;public&quot;.&quot;x_users&quot; LIMIT 100会有一行 username 名为 admin 的，后面就是密码，admin 就是用户名 或者点 Table queries，再点 x_user 也是可以的由于render 15分钟没访问会休眠，所以我们可以注册一个uptimerobot或checklyhq类似的这种监视网站，添加一个监控，24小时定时访问render上的项目，render就不会休眠了 render原本的免费计划是每月允许总共使用750小时，似乎是不计流量的，就部署一个项目来说完全够用。但是render官方宣布定价将从 2023 年 1 月 1 日开始更改，从每月使用750小时，改为了每月免费带宽100GB的流量。 示例站点🗂️ Alist演示站 檐牙的小云盘","summary":"写的比较仓促，有什么不足的地方，还请大家多多指点。评论区欢迎留言~ 2022/10/30新增下方的环境变量示例 感谢@WeiCN在评论区的错误指正 错误指正后，v3版本也能正常部署使用了 2023/3/16恢复图片链接，原深海图床CDN因未知原因无法访问，已把仅剩的缩略图迁移至去不图床，图片可能会比较模糊 简介Alist是一款支持多种存储的目录文件列表程序，后端基于gin，前端使用react [{\"url\":\"https://bu.dusays.com/2023/03/16/6413013a46fe1.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/6413010ad3013.png\",\"alt\":\"\"}] 加载更多 查看文档 查看源码 部署前准备 一个Github账号 Fork一份Alist-render的仓库 一个render账号 一个数据库，可选sqlite3、mysql、postgres render账号点击进入render官网点击右上角 GET STARTED,使用Github进行注册或登录按照网页的提示完成注册后进入控制面板 [{\"url\":\"https://bu.dusays.com/2023/03/16/641301642afa0.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/64130188a77c9.png\",\"alt\":\"\"}] 加载更多 数据库点击进入elephantsql官网点击位于页面中央的Get a managed database today，选择海龟样子的Free计划会进入登陆页面，可以使用Github进行授权登陆，然后信息随便填一下就行进入控制面板后创建数据库，计划记得选择Free这样我们就获得了一个免费的postgres类型的数据库 [{\"url\":\"https://bu.dusays.com/2023/03/16/641301d4e12ac.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/641301efa6837.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/641302067ba2a.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/64130228cfac7.png\",\"alt\":\"\"}] 加载更多 数据库的信息最好记下来备用，等一会要填 截图中的数据库在文章发布后已被删除 部署Alist拉取仓库进入render的控制台，点击New+，选择Web Service [{\"url\":\"https://bu.dusays.com/2023/03/16/64130252835b9.png\",\"alt\":\"\"},{\"url\":\"https://bu.dusays.com/2023/03/16/64130276670f6.png\",\"alt\":\"\"}] 加载更多 选择刚刚Fork的Alist-render的仓库点击，进入部署页面，自己取个名字，然后先什么都不要动，往下拉，拉到最底下 设置环境变量在左下角Create Web Service的按钮上边，有个Advanced按钮，点击然后在点击Add Environment Variable开始添加环境变量这边可以参考我之前在Alist社区的对话 引用站外地址 koyeb怎么连接数据库 github [{\"url\":\"https://bu.dusays.com/2023/03/16/6413029066de4.png\",\"alt\":\"\"}] 加载更多 参考表格对应填写变量参数，只要把DB_HOST，DB_NAME，DB_PASS，DB_USER给改成自己的就可以了 数据库对应 变量参数 示例参数 Server DB_HOST queenie.db.elephantsql.com User &amp; Default database DB_NAME bkqgx Password DB_PASS 5CqBjEVZWdaaad2333aadadadadN3Clo DB_PORT 5432 DB_SSL_MODE disable DB_TYPE postgres User &amp; Default database DB_USER bkqgx PORT 8080 填完检查一下，一共8个变量，好了就可以点击Create Web Service开始部署了，大概1~2分钟可以看到成果 2022/10/30新增下方的环境变量示例，供大家参考↓↓↓ 感谢@WeiCN在评论区的错误指正 错误指正后，v3版本也能正常部署使用了 环境变量示例参数示例文字示例关于sslmode 变量参数 示例参数 DB_HOST queenie.db.elephantsql.com DB_NAME bkqgx DB_PASS 5CqBjEVZWdaaad2333aadadadadN3Clo DB_PORT 5432 DB_SSL_MODE disable DB_TYPE postgres DB_USER bkqgx PORT 8080 变量参数 示例参数 DB_HOST 数据库地址 DB_NAME 数据库名字 DB_PASS 数据库密码 DB_PORT 数据库端口 DB_SSL_MODE SSL模式 DB_TYPE 数据库类型 DB_USER 数据库用户名 PORT 端口 DB_SSL_MODE这个变量我也不是很清楚，有错误的可以评论区指正，根据官方文档来看 sqlite3数据库：请忽略该参数 mysql数据库：参数有true, false, skip-verify, preferred,选一个填 postgres数据库：参数有disable，allow，prefer，require，verify-full，选一个填 我用的postgres数据库填的是disable，就是没用SSL 评论区疑难解答账密未输出保持唤醒如果你是已连接数据库了，那么你的密码应该已经写入数据库了，所以他不会再显示了，需要你自己去数据库看用户名和密码如果你使用的是elephantsql 数据库前往你自己的 elephantsql 数据库，点击侧边栏的 Browser 之后输入 SELECT * FROM &quot;public&quot;.&quot;x_users&quot; LIMIT 100会有一行 username 名为 admin 的，后面就是密码，admin 就是用户名 或者点 Table queries，再点 x_user 也是可以的由于render 15分钟没访问会休眠，所以我们可以注册一个uptimerobot或checklyhq类似的这种监视网站，添加一个监控，24小时定时访问render上的项目，render就不会休眠了 render原本的免费计划是每月允许总共使用750小时，似乎是不计流量的，就部署一个项目来说完全够用。但是render官方宣布定价将从 2023 年 1 月 1 日开始更改，从每月使用750小时，改为了每月免费带宽100GB的流量。 示例站点🗂️ Alist演示站 檐牙的小云盘","date_published":"2022-06-12T09:00:37.000Z","tags":["笔记","Github","🗂️Alist"]},{"id":"https://www.zxma.top/posts/ac06cf7a/","url":"https://www.zxma.top/posts/ac06cf7a/","title":"Butterfly主题美化/魔改日记","content_html":"<div class=\"note warning flat\"><ol>\n<li>声明一下，博主这没啥前端基础，写的可能很烂，这边只是自己记录一下</li>\n<li>这边的魔改都源自于别的大佬，链接放在最后了，大家有问题可以去看他们的</li>\n<li>以下魔改可能涉及修改主题源码，大家做好备份</li>\n<li>魔改后有出错可以百度，谷歌，必应，一般都能解决哈</li>\n<li>以下内容可能会不间断更新，现版本为，框架<code>Hexo:5.4.0</code>主题<code>Butterfly:4.1.0</code></li>\n</ol>\n</div>\n<h1 id=\"插件类魔改\"><a href=\"#插件类魔改\" class=\"headerlink\" title=\"插件类魔改\"></a>插件类魔改</h1><h2 id=\"添加看板娘\"><a href=\"#添加看板娘\" class=\"headerlink\" title=\"添加看板娘\"></a>添加看板娘</h2><div class=\"tabs\" id=\"kanbanniang\"><ul class=\"nav-tabs no-default\"><button type=\"button\" class=\"tab \" data-href=\"kanbanniang-1\">⚡快速引入</button><button type=\"button\" class=\"tab \" data-href=\"kanbanniang-2\">🔗教程索引</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content\" id=\"kanbanniang-1\"><ol>\n<li>在<code>Butterfly</code>的主题配置文件<code>_config.butterfly.yml</code>中引入<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Inject</span></span><br><span class=\"line\"><span class=\"comment\"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class=\"line\"><span class=\"comment\"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class=\"line\"><span class=\"attr\">inject:</span></span><br><span class=\"line\">  <span class=\"attr\">head:</span></span><br><span class=\"line\">   <span class=\"comment\"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">bottom:</span></span><br><span class=\"line\">   <span class=\"comment\"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">+</span>    <span class=\"bullet\">-</span> <span class=\"string\">&lt;script</span> <span class=\"string\">data-pjax</span> <span class=\"string\">defer</span> <span class=\"string\">src=&quot;https://npm.elemecdn.com/yanya-live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>保存文件修改，然后执行Hexo“三连”<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n马上就可以在<code>localhost:4000</code>看到预览效果</li>\n</ol></div><div class=\"tab-item-content\" id=\"kanbanniang-2\"><p>要详细了解的小伙伴这边走~QwQ💦Link start！！</p>\n<div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico\">\n    <div class=\"tag-link-tips\">引用站外地址</div>\n    <div class=\"tag-link-bottom\">\n        <div class=\"tag-link-left\" style=\"\">\n          <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n        </div>\n        <div class=\"tag-link-right\">\n            <div class=\"tag-link-title\">糖果屋看板娘教程贴</div>\n            <div class=\"tag-link-sitename\"> https://akilar.top/posts/5b8f515f/</div>\n        </div>\n        <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n    </div>\n    </a></div></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"anzhiyufont anzhiyu-icon-arrow-up\"></i></button></div></div>\n<h2 id=\"添加外挂标签\"><a href=\"#添加外挂标签\" class=\"headerlink\" title=\"添加外挂标签\"></a>添加外挂标签</h2><div class=\"tabs\" id=\"kanbanniang1\"><ul class=\"nav-tabs no-default\"><button type=\"button\" class=\"tab \" data-href=\"kanbanniang1-1\">⚡快速引入</button><button type=\"button\" class=\"tab \" data-href=\"kanbanniang1-2\">🔗教程索引</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content\" id=\"kanbanniang1-1\"><ol>\n<li>在<mark class=\"hl-label red\">博客</mark> 的<code>根目录</code>下执行<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-butterfly-tag-plugins-plus --save</span><br></pre></td></tr></table></figure></li>\n<li>具体配置方案请参看插件文档<br><a href=\"https://www.npmjs.com/package/hexo-butterfly-tag-plugins-plus\">hexo-butterfly-tag-plugins-plus</a></li>\n</ol></div><div class=\"tab-item-content\" id=\"kanbanniang1-2\"><p>依旧还是Akilar糖果屋店长~OvO💦Link start！！</p>\n<div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico\">\n    <div class=\"tag-link-tips\">引用站外地址</div>\n    <div class=\"tag-link-bottom\">\n        <div class=\"tag-link-left\" style=\"\">\n          <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n        </div>\n        <div class=\"tag-link-right\">\n            <div class=\"tag-link-title\">糖果屋Tag Plugins Plus贴</div>\n            <div class=\"tag-link-sitename\"> https://akilar.top/posts/615e2dec/</div>\n        </div>\n        <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n    </div>\n    </a></div></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"anzhiyufont anzhiyu-icon-arrow-up\"></i></button></div></div>\n<h2 id=\"留言板动态弹出信封样式\"><a href=\"#留言板动态弹出信封样式\" class=\"headerlink\" title=\"留言板动态弹出信封样式\"></a>留言板动态弹出信封样式</h2><div class=\"tabs\" id=\"kanbanniang2\"><ul class=\"nav-tabs no-default\"><button type=\"button\" class=\"tab \" data-href=\"kanbanniang2-1\">⚡快速引入</button><button type=\"button\" class=\"tab \" data-href=\"kanbanniang2-2\">🔗教程索引</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content\" id=\"kanbanniang2-1\"><ol>\n<li>在<mark class=\"hl-label red\">博客</mark> 的<code>根目录</code>下执行<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-butterfly-envelope --save</span><br></pre></td></tr></table></figure></li>\n<li>具体配置方案请参看插件文档<br><a href=\"https://www.npmjs.com/package/hexo-butterfly-envelope\">hexo-butterfly-envelope</a></li>\n</ol></div><div class=\"tab-item-content\" id=\"kanbanniang2-2\"><p>没错，还是Akilar糖果屋店长的教程~Link start！！</p>\n<div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico\">\n    <div class=\"tag-link-tips\">引用站外地址</div>\n    <div class=\"tag-link-bottom\">\n        <div class=\"tag-link-left\" style=\"\">\n          <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n        </div>\n        <div class=\"tag-link-right\">\n            <div class=\"tag-link-title\">信笺样式留言板</div>\n            <div class=\"tag-link-sitename\"> https://akilar.top/posts/e2d3c450/</div>\n        </div>\n        <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n    </div>\n    </a></div></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"anzhiyufont anzhiyu-icon-arrow-up\"></i></button></div></div>\n<h2 id=\"页脚电子钟和Github徽标\"><a href=\"#页脚电子钟和Github徽标\" class=\"headerlink\" title=\"页脚电子钟和Github徽标\"></a>页脚电子钟和Github徽标</h2><div class=\"tabs\" id=\"kanbanniang3\"><ul class=\"nav-tabs no-default\"><button type=\"button\" class=\"tab \" data-href=\"kanbanniang3-1\">⚡快速引入</button><button type=\"button\" class=\"tab \" data-href=\"kanbanniang3-2\">🔗教程索引</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content\" id=\"kanbanniang3-1\"><ol>\n<li>在<mark class=\"hl-label red\">博客</mark> 的<code>根目录</code>下执行<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-butterfly-footer-beautify --save</span><br></pre></td></tr></table></figure></li>\n<li>具体配置方案请参看插件文档<br><a href=\"https://www.npmjs.com/package/hexo-butterfly-footer-beautify\">hexo-butterfly-footer-beautify</a></li>\n</ol></div><div class=\"tab-item-content\" id=\"kanbanniang3-2\"><ol>\n<li>页脚电子钟<div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico\">\n <div class=\"tag-link-tips\">引用站外地址</div>\n <div class=\"tag-link-bottom\">\n     <div class=\"tag-link-left\" style=\"\">\n       <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n     </div>\n     <div class=\"tag-link-right\">\n         <div class=\"tag-link-title\">Native JS Timer</div>\n         <div class=\"tag-link-sitename\"> https://akilar.top/posts/b941af/</div>\n     </div>\n     <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n </div>\n </a></div></li>\n<li>Github徽标<div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico\">\n <div class=\"tag-link-tips\">引用站外地址</div>\n <div class=\"tag-link-bottom\">\n     <div class=\"tag-link-left\" style=\"\">\n       <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n     </div>\n     <div class=\"tag-link-right\">\n         <div class=\"tag-link-title\">Add Github Badge</div>\n         <div class=\"tag-link-sitename\"> https://akilar.top/posts/e87ad7f8/</div>\n     </div>\n     <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n </div>\n </a></div>\n</li>\n</ol></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"anzhiyufont anzhiyu-icon-arrow-up\"></i></button></div></div>\n<h2 id=\"侧边栏说说\"><a href=\"#侧边栏说说\" class=\"headerlink\" title=\"侧边栏说说\"></a>侧边栏说说</h2><div class=\"tabs\" id=\"kanbanniang4\"><ul class=\"nav-tabs no-default\"><button type=\"button\" class=\"tab \" data-href=\"kanbanniang4-1\">⚡快速引入</button><button type=\"button\" class=\"tab \" data-href=\"kanbanniang4-2\">🔗教程索引</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content\" id=\"kanbanniang4-1\"><ol>\n<li>在<mark class=\"hl-label red\">博客</mark> 的<code>根目录</code>下执行<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 如果安装过原版artitalk,请先卸载</span><br><span class=\"line\">npm uninstall hexo-butterfly-artitalk --save</span><br><span class=\"line\">npm install hexo-butterfly-artitalk-pro --save</span><br></pre></td></tr></table></figure></li>\n<li><p>具体配置方案请参看插件文档<br><a href=\"https://www.npmjs.com/package/hexo-butterfly-artitalk-pro\">hexo-butterfly-artitalk-pro</a></p>\n</li>\n<li><p>首次使用需要完成<mark class=\"hl-label default\">前置任务</mark> ，请前往<mark class=\"hl-label orange\">🔗教程索引</mark> 查看</p>\n</li>\n</ol></div><div class=\"tab-item-content\" id=\"kanbanniang4-2\"><p>这边这边，配置过程可能会有点麻烦OwO💦</p>\n<div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico\">\n    <div class=\"tag-link-tips\">引用站外地址</div>\n    <div class=\"tag-link-bottom\">\n        <div class=\"tag-link-left\" style=\"\">\n          <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n        </div>\n        <div class=\"tag-link-right\">\n            <div class=\"tag-link-title\">Artitalk Pro</div>\n            <div class=\"tag-link-sitename\"> https://akilar.top/posts/f1004b1d/</div>\n        </div>\n        <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n    </div>\n    </a></div></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"anzhiyufont anzhiyu-icon-arrow-up\"></i></button></div></div>\n<h2 id=\"时钟卡片\"><a href=\"#时钟卡片\" class=\"headerlink\" title=\"时钟卡片\"></a>时钟卡片</h2><div class=\"tabs\" id=\"kanbanniang5\"><ul class=\"nav-tabs no-default\"><button type=\"button\" class=\"tab \" data-href=\"kanbanniang5-1\">⚡快速引入</button><button type=\"button\" class=\"tab \" data-href=\"kanbanniang5-2\">🔗教程索引</button></ul><div class=\"tab-contents\"><div class=\"tab-item-content\" id=\"kanbanniang5-1\"><ol>\n<li>在<mark class=\"hl-label red\">博客</mark> 的<code>根目录</code>下执行<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-butterfly-clock --save</span><br></pre></td></tr></table></figure></li>\n<li>具体配置方案请参看插件文档<br><a href=\"https://www.npmjs.com/package/hexo-butterfly-clock\">hexo-butterfly-clock</a></li>\n</ol></div><div class=\"tab-item-content\" id=\"kanbanniang5-2\"><p>点击前往糖果屋~OuO</p>\n<div calss='anzhiyu-tag-link'><a class=\"tag-Link\" target=\"_blank\" href=\"https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico\">\n    <div class=\"tag-link-tips\">引用站外地址</div>\n    <div class=\"tag-link-bottom\">\n        <div class=\"tag-link-left\" style=\"\">\n          <i class=\"anzhiyufont anzhiyu-icon-link\" style=\"\"></i>\n        </div>\n        <div class=\"tag-link-right\">\n            <div class=\"tag-link-title\">Sidebar Card Clock</div>\n            <div class=\"tag-link-sitename\"> https://akilar.top/posts/4e39cf4a/</div>\n        </div>\n        <i class=\"anzhiyufont anzhiyu-icon-angle-right\"></i>\n    </div>\n    </a></div></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"anzhiyufont anzhiyu-icon-arrow-up\"></i></button></div></div>\n<div class=\"note warning flat\"><p>随缘更新ing</p>\n</div>\n<h1 id=\"魔改大佬们\"><a href=\"#魔改大佬们\" class=\"headerlink\" title=\"魔改大佬们\"></a>魔改大佬们</h1><div class=\"site-card-group\"><a class=\"site-card\" href=\"https://akilar.top/posts/f99b208/\" data-title=欢迎光临糖果屋><div class=\"wrapper cover\"><img class=\"cover fadeIn\" src=\"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg\"/></div><div class=\"info\"><img class=\"flink-avatar\" src=\"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg\"/><span class=\"site-title\">Akilar</span></div></a>\n<a class=\"site-card\" href=\"/\" data-title=博主正在书写中><div class=\"wrapper cover\"><img class=\"cover fadeIn\" src=\"\"/></div><div class=\"info\"><span class=\"site-title\">敬请期待</span></div></a></div>","content_text":"声明一下，博主这没啥前端基础，写的可能很烂，这边只是自己记录一下 这边的魔改都源自于别的大佬，链接放在最后了，大家有问题可以去看他们的 以下魔改可能涉及修改主题源码，大家做好备份 魔改后有出错可以百度，谷歌，必应，一般都能解决哈 以下内容可能会不间断更新，现版本为，框架Hexo:5.4.0主题Butterfly:4.1.0 插件类魔改添加看板娘⚡快速引入🔗教程索引 在Butterfly的主题配置文件_config.butterfly.yml中引入123456789# Inject# Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)# 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前inject: head: # - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt; bottom: # - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;+ - &lt;script data-pjax defer src=&quot;https://npm.elemecdn.com/yanya-live2d-widget/autoload.js&quot;&gt;&lt;/script&gt; 保存文件修改，然后执行Hexo“三连”123hexo cleanhexo ghexo s 马上就可以在localhost:4000看到预览效果 要详细了解的小伙伴这边走~QwQ💦Link start！！ 引用站外地址 糖果屋看板娘教程贴 https://akilar.top/posts/5b8f515f/ 添加外挂标签⚡快速引入🔗教程索引 在博客 的根目录下执行1npm install hexo-butterfly-tag-plugins-plus --save 具体配置方案请参看插件文档hexo-butterfly-tag-plugins-plus 依旧还是Akilar糖果屋店长~OvO💦Link start！！ 引用站外地址 糖果屋Tag Plugins Plus贴 https://akilar.top/posts/615e2dec/ 留言板动态弹出信封样式⚡快速引入🔗教程索引 在博客 的根目录下执行1npm install hexo-butterfly-envelope --save 具体配置方案请参看插件文档hexo-butterfly-envelope 没错，还是Akilar糖果屋店长的教程~Link start！！ 引用站外地址 信笺样式留言板 https://akilar.top/posts/e2d3c450/ 页脚电子钟和Github徽标⚡快速引入🔗教程索引 在博客 的根目录下执行1npm install hexo-butterfly-footer-beautify --save 具体配置方案请参看插件文档hexo-butterfly-footer-beautify 页脚电子钟 引用站外地址 Native JS Timer https://akilar.top/posts/b941af/ Github徽标 引用站外地址 Add Github Badge https://akilar.top/posts/e87ad7f8/ 侧边栏说说⚡快速引入🔗教程索引 在博客 的根目录下执行123# 如果安装过原版artitalk,请先卸载npm uninstall hexo-butterfly-artitalk --savenpm install hexo-butterfly-artitalk-pro --save 具体配置方案请参看插件文档hexo-butterfly-artitalk-pro 首次使用需要完成前置任务 ，请前往🔗教程索引 查看 这边这边，配置过程可能会有点麻烦OwO💦 引用站外地址 Artitalk Pro https://akilar.top/posts/f1004b1d/ 时钟卡片⚡快速引入🔗教程索引 在博客 的根目录下执行1npm install hexo-butterfly-clock --save 具体配置方案请参看插件文档hexo-butterfly-clock 点击前往糖果屋~OuO 引用站外地址 Sidebar Card Clock https://akilar.top/posts/4e39cf4a/ 随缘更新ing 魔改大佬们Akilar 敬请期待","summary":"声明一下，博主这没啥前端基础，写的可能很烂，这边只是自己记录一下 这边的魔改都源自于别的大佬，链接放在最后了，大家有问题可以去看他们的 以下魔改可能涉及修改主题源码，大家做好备份 魔改后有出错可以百度，谷歌，必应，一般都能解决哈 以下内容可能会不间断更新，现版本为，框架Hexo:5.4.0主题Butterfly:4.1.0 插件类魔改添加看板娘⚡快速引入🔗教程索引 在Butterfly的主题配置文件_config.butterfly.yml中引入123456789# Inject# Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)# 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前inject: head: # - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt; bottom: # - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;+ - &lt;script data-pjax defer src=&quot;https://npm.elemecdn.com/yanya-live2d-widget/autoload.js&quot;&gt;&lt;/script&gt; 保存文件修改，然后执行Hexo“三连”123hexo cleanhexo ghexo s 马上就可以在localhost:4000看到预览效果 要详细了解的小伙伴这边走~QwQ💦Link start！！ 引用站外地址 糖果屋看板娘教程贴 https://akilar.top/posts/5b8f515f/ 添加外挂标签⚡快速引入🔗教程索引 在博客 的根目录下执行1npm install hexo-butterfly-tag-plugins-plus --save 具体配置方案请参看插件文档hexo-butterfly-tag-plugins-plus 依旧还是Akilar糖果屋店长~OvO💦Link start！！ 引用站外地址 糖果屋Tag Plugins Plus贴 https://akilar.top/posts/615e2dec/ 留言板动态弹出信封样式⚡快速引入🔗教程索引 在博客 的根目录下执行1npm install hexo-butterfly-envelope --save 具体配置方案请参看插件文档hexo-butterfly-envelope 没错，还是Akilar糖果屋店长的教程~Link start！！ 引用站外地址 信笺样式留言板 https://akilar.top/posts/e2d3c450/ 页脚电子钟和Github徽标⚡快速引入🔗教程索引 在博客 的根目录下执行1npm install hexo-butterfly-footer-beautify --save 具体配置方案请参看插件文档hexo-butterfly-footer-beautify 页脚电子钟 引用站外地址 Native JS Timer https://akilar.top/posts/b941af/ Github徽标 引用站外地址 Add Github Badge https://akilar.top/posts/e87ad7f8/ 侧边栏说说⚡快速引入🔗教程索引 在博客 的根目录下执行123# 如果安装过原版artitalk,请先卸载npm uninstall hexo-butterfly-artitalk --savenpm install hexo-butterfly-artitalk-pro --save 具体配置方案请参看插件文档hexo-butterfly-artitalk-pro 首次使用需要完成前置任务 ，请前往🔗教程索引 查看 这边这边，配置过程可能会有点麻烦OwO💦 引用站外地址 Artitalk Pro https://akilar.top/posts/f1004b1d/ 时钟卡片⚡快速引入🔗教程索引 在博客 的根目录下执行1npm install hexo-butterfly-clock --save 具体配置方案请参看插件文档hexo-butterfly-clock 点击前往糖果屋~OuO 引用站外地址 Sidebar Card Clock https://akilar.top/posts/4e39cf4a/ 随缘更新ing 魔改大佬们Akilar 敬请期待","date_published":"2022-04-21T13:45:15.000Z","tags":["🦋Butterfly","📁Hexo","🦋Butterfly"]},{"id":"https://www.zxma.top/posts/42bcf2a5/","url":"https://www.zxma.top/posts/42bcf2a5/","title":"浪漫世界趣事01","content_html":"<div class=\"note info flat\"><p>封面来源<a href=\"https://www.pixiv.net/artworks/74859609\">Pixiv</a>，<a href=\"https://www.pixiv.net/users/682137\">作者エイリゾ</a></p>\n</div>\n<div class=\"note warning flat\"><p>文章部分图片来源<a href=\"http://dbdicontoolbox.com/\">Dead By Daylight Icon Toolbox</a>和<a href=\"https://space.bilibili.com/20495744\">灵魂刺青x</a></p>\n</div>\n<hr>\n<div class=\"tip \"><p>担心有些人不知道这游戏，先简单引用一下百度百科，然后文章里会解释大部分东西</p>\n</div>\n<h1 id=\"游戏简介\"><a href=\"#游戏简介\" class=\"headerlink\" title=\"游戏简介\"></a>游戏简介</h1><p><a href=\"https://www.deadbydaylight.com/\">《黎明杀机》</a> 是一款由<a href=\"https://www.bhvr.com/\">Behavior Interactive</a>工作室开发，<a href=\"https://www.starbreeze.com/\">Starbreeze Studios</a>公司发行的一款生存恐怖游戏，于2016年6月14日PC发行。<br>游戏扮演杀手的玩家视角为第一人称视角，拥有强大的能力，还可以使用特殊能力来追踪逃亡者。<br>而扮演逃亡者的四名玩家则是第三人称视角，可以更好地观察周遭环境。玩家必须在强大的压力下做出残酷而正确的决定。</p>\n<h2 id=\"修理电机\"><a href=\"#修理电机\" class=\"headerlink\" title=\"修理电机\"></a>修理电机</h2><p>扮演逃生者的玩家需要一边躲避屠夫的追杀，一边修理这些电机。以开启逃生大门，获得胜利，一般每张地图上都存在4-7个的电机（主要取决于逃生者人数）。当修复（开局玩家人数+1）个电机时，地图上存在的2个逃生大门便可以打开。<img no-lazy class=\"inline\" src=\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/dianji.png\" style=\"height:50px;\"/></p>\n<h1 id=\"事情起因\"><a href=\"#事情起因\" class=\"headerlink\" title=\"事情起因\"></a>事情起因</h1><p>博主和三位同学一起玩黎明杀机的时候，突发奇想要整活。<br>所谓的整活就是我们扮演四位逃身者，开局不修机子，直接躲在草丛里摆烂。<br>看看屠夫要花多长时间发现我们四个。</p>\n<h1 id=\"整活准备\"><a href=\"#整活准备\" class=\"headerlink\" title=\"整活准备\"></a>整活准备</h1><p>我们选择了游戏中最黑的角色，克劳黛特·莫莱，人称黑妹，这边放一下她的二创图。<br>为了让整活更加顺利，我们烧了一张米德维奇小学地图祭品。<br>《黎明杀机》中米德维奇小学是与寂静岭联动的一张地图，如下图。<br>米德维奇小学中间有一块空地，四周是草坪，以黑妹的模型颜色，蹲在四个角落的草丛里，一般根本看不见<br><div class=\"gallery\">\n  <div class=\"fj-gallery page_img_lazyload  data\" data-rowHeight=\"220\" data-limit=\"10\">\n    <span class=\"gallery-data\">[{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/hm.png\",\"alt\":\"克劳黛特·莫莱\"},{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/mwq01.png\",\"alt\":\"米德维奇小学\"},{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/mwq02.png\",\"alt\":\"米德维奇小学\"},{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/mwq03.png\",\"alt\":\"米德维奇小学解析图\"}]</span>\n  </div><button class=\"gallery-load-more\" style=\"opacity:0\">\n  <span>加载更多</span>\n  <i class=\"anzhiyufont anzhiyu-icon-arrow-down\"></i>\n  </button></div></p>\n<h1 id=\"整活过程\"><a href=\"#整活过程\" class=\"headerlink\" title=\"整活过程\"></a>整活过程</h1><p>开局四个憨憨直接往小学中央狂奔，并各自找了地方，蹲在草里。蹲着不动的效果就像是隐身了一样，根本看不见。当然不能一直不动，官方应该是为了防止人类玩家蹲着不动，屠夫找不到的情况出现，人类在一段时间没有和东西交互后，头上会开始飞乌鸦，同时屠夫玩家会看到乌鸦提醒。所以我们每人带了道具和技能<mark class=\"hl-label purple\">毛骨悚然</mark> 。<img no-lazy class=\"inline\" src=\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/cat.png\" style=\"height:60px;\"/><mark class=\"hl-label purple\">毛骨悚然</mark> 的作用是，屠夫距离你36米范围内并面对你的方向时，毛骨悚然图标会亮起来给你提示。当毛骨悚然不亮的时候，我们就开始和手中道具互动，毛骨悚然一但亮起来就立刻停止互动。就这样持续了6分钟左右</p>\n<h1 id=\"整活结束\"><a href=\"#整活结束\" class=\"headerlink\" title=\"整活结束\"></a>整活结束</h1><p>我们四个憨憨蹲了6分钟，连屠夫影子都没看见，甚至没有碰到屠夫的<mark class=\"hl-label orange\">恐惧范围</mark> ，<mark class=\"hl-label orange\">恐惧范围</mark> 是杀机初始的游戏机制,其目的是向逃生者提示屠夫的接近,并引起他们的恐惧,让他们不断听到随着距离接近而加强的心跳声。我们就开始猜测屠夫是不是找不到我们气的挂机了。一位同学还十分肯定的说，刚刚他听到了屠夫的声音，肯定是<mark class=\"hl-label default\">幽灵杀手</mark> 。<mark class=\"hl-label default\">幽灵杀手</mark> 的能力可以让自己隐身，隐身时没有恐惧范围。于是我们安心下来继续整活，大概从开局开始算，过了快9分钟后，有位同学憋不住了，让我们继续蹲着，自己去看看屠夫在哪。同学上了二楼，结果发现屠夫不是<mark class=\"hl-label default\">幽灵杀手</mark> ，而是<mark class=\"hl-label red\">麦克尔·麦尔斯</mark> ！！<mark class=\"hl-label red\">麦克尔·麦尔斯</mark> 站在二楼的缺口旁，看着下面一动不动。于是就有了下面这幅名场面……<br><div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/01.jpg\"/></div></div><br>图片经过处理，游戏内没有这么亮，下面放原图<br><div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/01y.jpg\"/></div></div></p>\n<h1 id=\"小丑竟是我们自己🤡\"><a href=\"#小丑竟是我们自己🤡\" class=\"headerlink\" title=\"小丑竟是我们自己🤡\"></a>小丑竟是我们自己🤡</h1><p>为什么这样说呢，来看下<mark class=\"hl-label red\">麦克尔·麦尔斯</mark> 的能力就知道了<br><div class=\"gallery\">\n  <div class=\"fj-gallery page_img_lazyload  data\" data-rowHeight=\"220\" data-limit=\"10\">\n    <span class=\"gallery-data\">[{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/mk.png\",\"alt\":\"麦克尔·麦尔斯\"},{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/02.jpg\",\"alt\":\"米德维奇小学\"}]</span>\n  </div><button class=\"gallery-load-more\" style=\"opacity:0\">\n  <span>加载更多</span>\n  <i class=\"anzhiyufont anzhiyu-icon-arrow-down\"></i>\n  </button></div><br><mark class=\"hl-label default\">能力-恶魔附身</mark> ：进行偷窥，不仅可以察觉逃生者的位置，更能从他们身上吸取恶意值提升阶段。初始为第一阶段，此时麦克没有恐惧范围，移动速度也较慢。第二阶段时恐惧范围（16m）与移动速度恢复正常。第三阶段时回复为正常恐惧范围（32m）翻越窗户的速度变快且所有逃生者得到危险状态（杀手攻击力双倍）。<br><mark class=\"hl-label red\">麦克尔·麦尔斯</mark> 在进行窥视的时候，逃身者会有一个高亮描边，也就是说我们四个憨憨蹲的9分钟里，他就看着我们，在下边走来走去，看了九分钟，七分一度很尴尬。感觉麦叔玩家此时在说:“四个煞笔…”。<mark class=\"hl-label red\">麦克尔·麦尔斯</mark> 在同学发现时，还处于一阶段，所以我们才全程没有听见恐惧范围</p>\n<h1 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h1><p>笑拉了，之后<mark class=\"hl-label red\">麦克尔·麦尔斯</mark> ，监督我们修完了所有机子，并目送我们出了大门QwQ</p>\n","content_text":"封面来源Pixiv，作者エイリゾ 文章部分图片来源Dead By Daylight Icon Toolbox和灵魂刺青x 担心有些人不知道这游戏，先简单引用一下百度百科，然后文章里会解释大部分东西 游戏简介《黎明杀机》 是一款由Behavior Interactive工作室开发，Starbreeze Studios公司发行的一款生存恐怖游戏，于2016年6月14日PC发行。游戏扮演杀手的玩家视角为第一人称视角，拥有强大的能力，还可以使用特殊能力来追踪逃亡者。而扮演逃亡者的四名玩家则是第三人称视角，可以更好地观察周遭环境。玩家必须在强大的压力下做出残酷而正确的决定。 修理电机扮演逃生者的玩家需要一边躲避屠夫的追杀，一边修理这些电机。以开启逃生大门，获得胜利，一般每张地图上都存在4-7个的电机（主要取决于逃生者人数）。当修复（开局玩家人数+1）个电机时，地图上存在的2个逃生大门便可以打开。 事情起因博主和三位同学一起玩黎明杀机的时候，突发奇想要整活。所谓的整活就是我们扮演四位逃身者，开局不修机子，直接躲在草丛里摆烂。看看屠夫要花多长时间发现我们四个。 整活准备我们选择了游戏中最黑的角色，克劳黛特·莫莱，人称黑妹，这边放一下她的二创图。为了让整活更加顺利，我们烧了一张米德维奇小学地图祭品。《黎明杀机》中米德维奇小学是与寂静岭联动的一张地图，如下图。米德维奇小学中间有一块空地，四周是草坪，以黑妹的模型颜色，蹲在四个角落的草丛里，一般根本看不见 [{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/hm.png\",\"alt\":\"克劳黛特·莫莱\"},{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/mwq01.png\",\"alt\":\"米德维奇小学\"},{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/mwq02.png\",\"alt\":\"米德维奇小学\"},{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/mwq03.png\",\"alt\":\"米德维奇小学解析图\"}] 加载更多 整活过程开局四个憨憨直接往小学中央狂奔，并各自找了地方，蹲在草里。蹲着不动的效果就像是隐身了一样，根本看不见。当然不能一直不动，官方应该是为了防止人类玩家蹲着不动，屠夫找不到的情况出现，人类在一段时间没有和东西交互后，头上会开始飞乌鸦，同时屠夫玩家会看到乌鸦提醒。所以我们每人带了道具和技能毛骨悚然 。毛骨悚然 的作用是，屠夫距离你36米范围内并面对你的方向时，毛骨悚然图标会亮起来给你提示。当毛骨悚然不亮的时候，我们就开始和手中道具互动，毛骨悚然一但亮起来就立刻停止互动。就这样持续了6分钟左右 整活结束我们四个憨憨蹲了6分钟，连屠夫影子都没看见，甚至没有碰到屠夫的恐惧范围 ，恐惧范围 是杀机初始的游戏机制,其目的是向逃生者提示屠夫的接近,并引起他们的恐惧,让他们不断听到随着距离接近而加强的心跳声。我们就开始猜测屠夫是不是找不到我们气的挂机了。一位同学还十分肯定的说，刚刚他听到了屠夫的声音，肯定是幽灵杀手 。幽灵杀手 的能力可以让自己隐身，隐身时没有恐惧范围。于是我们安心下来继续整活，大概从开局开始算，过了快9分钟后，有位同学憋不住了，让我们继续蹲着，自己去看看屠夫在哪。同学上了二楼，结果发现屠夫不是幽灵杀手 ，而是麦克尔·麦尔斯 ！！麦克尔·麦尔斯 站在二楼的缺口旁，看着下面一动不动。于是就有了下面这幅名场面……图片经过处理，游戏内没有这么亮，下面放原图 小丑竟是我们自己🤡为什么这样说呢，来看下麦克尔·麦尔斯 的能力就知道了 [{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/mk.png\",\"alt\":\"麦克尔·麦尔斯\"},{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/02.jpg\",\"alt\":\"米德维奇小学\"}] 加载更多 能力-恶魔附身 ：进行偷窥，不仅可以察觉逃生者的位置，更能从他们身上吸取恶意值提升阶段。初始为第一阶段，此时麦克没有恐惧范围，移动速度也较慢。第二阶段时恐惧范围（16m）与移动速度恢复正常。第三阶段时回复为正常恐惧范围（32m）翻越窗户的速度变快且所有逃生者得到危险状态（杀手攻击力双倍）。麦克尔·麦尔斯 在进行窥视的时候，逃身者会有一个高亮描边，也就是说我们四个憨憨蹲的9分钟里，他就看着我们，在下边走来走去，看了九分钟，七分一度很尴尬。感觉麦叔玩家此时在说:“四个煞笔…”。麦克尔·麦尔斯 在同学发现时，还处于一阶段，所以我们才全程没有听见恐惧范围 结束笑拉了，之后麦克尔·麦尔斯 ，监督我们修完了所有机子，并目送我们出了大门QwQ","summary":"封面来源Pixiv，作者エイリゾ 文章部分图片来源Dead By Daylight Icon Toolbox和灵魂刺青x 担心有些人不知道这游戏，先简单引用一下百度百科，然后文章里会解释大部分东西 游戏简介《黎明杀机》 是一款由Behavior Interactive工作室开发，Starbreeze Studios公司发行的一款生存恐怖游戏，于2016年6月14日PC发行。游戏扮演杀手的玩家视角为第一人称视角，拥有强大的能力，还可以使用特殊能力来追踪逃亡者。而扮演逃亡者的四名玩家则是第三人称视角，可以更好地观察周遭环境。玩家必须在强大的压力下做出残酷而正确的决定。 修理电机扮演逃生者的玩家需要一边躲避屠夫的追杀，一边修理这些电机。以开启逃生大门，获得胜利，一般每张地图上都存在4-7个的电机（主要取决于逃生者人数）。当修复（开局玩家人数+1）个电机时，地图上存在的2个逃生大门便可以打开。 事情起因博主和三位同学一起玩黎明杀机的时候，突发奇想要整活。所谓的整活就是我们扮演四位逃身者，开局不修机子，直接躲在草丛里摆烂。看看屠夫要花多长时间发现我们四个。 整活准备我们选择了游戏中最黑的角色，克劳黛特·莫莱，人称黑妹，这边放一下她的二创图。为了让整活更加顺利，我们烧了一张米德维奇小学地图祭品。《黎明杀机》中米德维奇小学是与寂静岭联动的一张地图，如下图。米德维奇小学中间有一块空地，四周是草坪，以黑妹的模型颜色，蹲在四个角落的草丛里，一般根本看不见 [{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/hm.png\",\"alt\":\"克劳黛特·莫莱\"},{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/mwq01.png\",\"alt\":\"米德维奇小学\"},{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/mwq02.png\",\"alt\":\"米德维奇小学\"},{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/mwq03.png\",\"alt\":\"米德维奇小学解析图\"}] 加载更多 整活过程开局四个憨憨直接往小学中央狂奔，并各自找了地方，蹲在草里。蹲着不动的效果就像是隐身了一样，根本看不见。当然不能一直不动，官方应该是为了防止人类玩家蹲着不动，屠夫找不到的情况出现，人类在一段时间没有和东西交互后，头上会开始飞乌鸦，同时屠夫玩家会看到乌鸦提醒。所以我们每人带了道具和技能毛骨悚然 。毛骨悚然 的作用是，屠夫距离你36米范围内并面对你的方向时，毛骨悚然图标会亮起来给你提示。当毛骨悚然不亮的时候，我们就开始和手中道具互动，毛骨悚然一但亮起来就立刻停止互动。就这样持续了6分钟左右 整活结束我们四个憨憨蹲了6分钟，连屠夫影子都没看见，甚至没有碰到屠夫的恐惧范围 ，恐惧范围 是杀机初始的游戏机制,其目的是向逃生者提示屠夫的接近,并引起他们的恐惧,让他们不断听到随着距离接近而加强的心跳声。我们就开始猜测屠夫是不是找不到我们气的挂机了。一位同学还十分肯定的说，刚刚他听到了屠夫的声音，肯定是幽灵杀手 。幽灵杀手 的能力可以让自己隐身，隐身时没有恐惧范围。于是我们安心下来继续整活，大概从开局开始算，过了快9分钟后，有位同学憋不住了，让我们继续蹲着，自己去看看屠夫在哪。同学上了二楼，结果发现屠夫不是幽灵杀手 ，而是麦克尔·麦尔斯 ！！麦克尔·麦尔斯 站在二楼的缺口旁，看着下面一动不动。于是就有了下面这幅名场面……图片经过处理，游戏内没有这么亮，下面放原图 小丑竟是我们自己🤡为什么这样说呢，来看下麦克尔·麦尔斯 的能力就知道了 [{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/mk.png\",\"alt\":\"麦克尔·麦尔斯\"},{\"url\":\"https://npm.elemecdn.com/roofang-rs@1.0.9/post/42bcf2a5/02.jpg\",\"alt\":\"米德维奇小学\"}] 加载更多 能力-恶魔附身 ：进行偷窥，不仅可以察觉逃生者的位置，更能从他们身上吸取恶意值提升阶段。初始为第一阶段，此时麦克没有恐惧范围，移动速度也较慢。第二阶段时恐惧范围（16m）与移动速度恢复正常。第三阶段时回复为正常恐惧范围（32m）翻越窗户的速度变快且所有逃生者得到危险状态（杀手攻击力双倍）。麦克尔·麦尔斯 在进行窥视的时候，逃身者会有一个高亮描边，也就是说我们四个憨憨蹲的9分钟里，他就看着我们，在下边走来走去，看了九分钟，七分一度很尴尬。感觉麦叔玩家此时在说:“四个煞笔…”。麦克尔·麦尔斯 在同学发现时，还处于一阶段，所以我们才全程没有听见恐惧范围 结束笑拉了，之后麦克尔·麦尔斯 ，监督我们修完了所有机子，并目送我们出了大门QwQ","date_published":"2022-04-14T14:22:07.000Z","tags":["生活","分享","🎮游戏","📔日记","⚙️浪漫世界"]},{"id":"https://www.zxma.top/posts/a2e0e64a/","url":"https://www.zxma.top/posts/a2e0e64a/","title":"关于为什么要写博客","content_html":"<div class=\"tip \"><p>博主刚开始写博客，写的不好的各位客官可以指出来，QwQ嘿嘿~</p>\n</div>\n<h1 id=\"一，为啥要写博客\"><a href=\"#一，为啥要写博客\" class=\"headerlink\" title=\"一，为啥要写博客\"></a>一，为啥要写博客</h1><h2 id=\"了解概念\"><a href=\"#了解概念\" class=\"headerlink\" title=\"了解概念\"></a>了解概念</h2><p>我记得第一次了解到博客这个概念是在<a href=\"https://www.bilibili.com/\">哔哩哔哩</a> <svg class=\"icon\" style=\"width:2em; height:2em\" aria-hidden=\"true\"><use xlink:href=\"#icon-bilibili1\"></use></svg> ，当时还是初二。<a href=\"https://www.bilibili.com/video/BV1q4411672K\">相关视频</a></p>\n<p>第一次看到的时候就感觉特别有意思<img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/HONKAI3-Daily/14.gif\" style=\"height:50px;\"/>，于是就去跟着视频去做了一遍。我记得这位UP主还自己出钱，提供过免费的二级域名让我们去试着搭建，现在已经没有了。</p>\n<h2 id=\"中途放弃\"><a href=\"#中途放弃\" class=\"headerlink\" title=\"中途放弃\"></a>中途放弃</h2><p>当时了解到的是，建一个博客必须需要服务器~，一台服务器就要好多钱，觉得门槛太高，<img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/HONKAI3-Daily/16.gif\" style=\"height:50px;\"/>就没继续往下探索。B站当时好像也没有任何教程,也有可能是我搜索的有问题？<img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/HONKAI3-Daily/2.gif\" style=\"height:50px;\"/></p>\n<h1 id=\"发现新大陆\"><a href=\"#发现新大陆\" class=\"headerlink\" title=\"发现新大陆\"></a>发现新大陆</h1><p>有次我突然又回想到了博客这事，于是去B站搜索博客一关键词，了解到了<a href=\"https://hexo.io/\">Hexo</a><svg class=\"icon\" style=\"width:2em; height:2em\" aria-hidden=\"true\"><use xlink:href=\"#icon-hexo\"></use></svg>，<a href=\"https://gridea.dev/\">Gridea</a><img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/zxmacc/CDN@master/images/image.bbr7457u8ow.png\" style=\"height:50px;\"/>这种静态博客生成器，还有代码托管网站<a href=\"https://github.com/\">Github</a><svg class=\"icon\" style=\"width:2em; height:2em\" aria-hidden=\"true\"><use xlink:href=\"#icon-huaban88\"></use></svg>。这让我又重新有了搭建博客的兴趣！<img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/HONKAI3-Daily/12.gif\" style=\"height:50px;\"/></p>\n<h2 id=\"尝试\"><a href=\"#尝试\" class=\"headerlink\" title=\"尝试\"></a>尝试</h2><p>当时没有任何的代码基础，自己啥也不懂，一开始用的Hexo，全是网上搜教程，傻瓜式一步一步来，然后教程里没有讲到的，我写出来全是报错，红色的致命错误<img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/HONKAI3-Daily/7.gif\" style=\"height:50px;\"/>，当时也没去找大佬，自己就在错误中摸索吧~，非常的崩溃，整的我有一段时间不想弄了。<img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/HONKAI3-Daily/10.gif\" style=\"height:50px;\"/></p>\n<h2 id=\"契机\"><a href=\"#契机\" class=\"headerlink\" title=\"契机\"></a>契机</h2><p>之后看到了Gridea这个生成器，并且Gridea的主题里，有一个搬运自Hexo的Next主题。因为Gridea有自己的UI界面，操作起来很方便，每次生成和上传几乎都是成功的。这里感谢Next主题的作者们，以及<a href=\"https://yeming.site/\">Madara</a><img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/hsxyhao/hsxyhao.github.io@1.3.3/images/avatar.png\" style=\"height:50px;\"/>搬运的Next主题。之后开始正常使用博客后，我不满足于现状，感觉Gridea的扩展性太弱了，就开始一边用Gridea写博客<psw>虽然也没写多少，嘿嘿</psw>，一边探索Hexo这个扩展性极高的生成器。</p>\n<h1 id=\"搭建过程\"><a href=\"#搭建过程\" class=\"headerlink\" title=\"搭建过程\"></a>搭建过程</h1><p>搭建过程除了网上搜教程，全靠自己摸索，没有问别的大佬，<del>有点社恐吧~2333</del>，有时折腾到凌晨3点多。终于在一个暑假过后，在Hexo上获得了突破，有了一个像样的博客 <img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/HONKAI3-Daily/8.gif\" style=\"height:50px;\"/>。</p>\n<h2 id=\"违背初衷\"><a href=\"#违背初衷\" class=\"headerlink\" title=\"违背初衷\"></a>违背初衷</h2><p>之后可以说是走火入魔了<img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/HONKAI3-Daily/10.gif\" style=\"height:50px;\"/>，初衷是想有个自己可以写东西的地方吧，我也挺喜欢画画的，也可以把自己的画放在博客上面。但是我开始折腾主题，想让自己的博客变的好看 <img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/HONKAI3-Daily/15.gif\" style=\"height:50px;\"/></p>\n<h1 id=\"Next主题\"><a href=\"#Next主题\" class=\"headerlink\" title=\"Next主题\"></a>Next主题</h1><div class=\"site-card-group\">\n<a class=\"site-card\" href=\"https://theme-next.js.org/\" data-title=Next主题原作者><div class=\"wrapper cover\"><img class=\"cover fadeIn\" src=\"https://gcore.jsdelivr.net/gh/zxmacc/CDN@master/images/image.6892vcylvhs0.png\"/></div><div class=\"info\"><img class=\"flink-avatar\" src=\"https://theme-next.js.org/images/logo.svg\"/><span class=\"site-title\">Next</span></div></a>\n\n<a class=\"site-card\" href=\"https://yeming.site/\" data-title=Next主题搬运作者><div class=\"wrapper cover\"><img class=\"cover fadeIn\" src=\"https://gridea.dev//media/images/theme-images/theme-next.jpg\"/></div><div class=\"info\"><img class=\"flink-avatar\" src=\"https://gcore.jsdelivr.net/gh/hsxyhao/hsxyhao.github.io@1.3.3/images/avatar.png\"/><span class=\"site-title\">Madara</span></div></a>\n</div>\n<h1 id=\"更换为Butterfly主题\"><a href=\"#更换为Butterfly主题\" class=\"headerlink\" title=\"更换为Butterfly主题\"></a>更换为Butterfly主题</h1><p>有次在CSDN上搜索推荐的Hexo主题，偶然间看到了<a href=\"https://butterfly.js.org/\">Buttefly</a><svg class=\"icon\" style=\"width:2em; height:2em\" aria-hidden=\"true\"><use xlink:href=\"#icon-Butterfly\"></use></svg>主题，第一次看到时一脸惊讶：哇！怎么这么好看！加载速度也嗖嗖地，非常快！觉得 <img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/HONKAI3-Daily/13.gif\" style=\"height:50px;\"/>这个主题不错。于是就变成了现在的这个样子。也感谢Butterfly作者做了这么棒的主题。</p>\n<div class=\"site-card-group\">\n<a class=\"site-card\" href=\"https://theme-next.js.org/\" data-title=Butterfly主题作者><div class=\"wrapper cover\"><img class=\"cover fadeIn\" src=\"https://gcore.jsdelivr.net/gh/zxmacc/CDN@master/images/image.1tlve9ii9go0.png\"/></div><div class=\"info\"><img class=\"flink-avatar\" src=\"https://gcore.jsdelivr.net/gh/zxmacc/CDN@master/images/image.1h37a9sco9kw.png\"/><span class=\"site-title\">Butterfly</span></div></a>\n</div>\n<h2 id=\"魔改\"><a href=\"#魔改\" class=\"headerlink\" title=\"魔改\"></a>魔改</h2><p>然后这个主题的扩展性很强吧，就衍生出了一堆的魔改。我现在写这个文章时，用的就是自己已经魔改好的主题。这个魔改也很折腾人，但是也让我逐渐理解了这个Hexo，还有主题的一些机制吧~<img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/HONKAI3-Daily/14.gif\" style=\"height:50px;\"/></p>\n<h1 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h1><p>总之就是这样啦，从初二开始探索到现在初中毕业吧。这个写博客的动力来源，一开始是因为我初一时，好像很浪费时间，总是浑浑噩噩的。我想通过这个来弥补吧~。现在的话就是一个兴趣吧，也挺好，写到这里时我还挺激动的~<img no-lazy class=\"inline\" src=\"https://gcore.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/HONKAI3-Daily/5.gif\" style=\"height:50px;\"/></p>\n<blockquote>\n<p>写的有些匆忙，不合适的地方可以指出来哈OvO~</p>\n</blockquote>\n","content_text":"博主刚开始写博客，写的不好的各位客官可以指出来，QwQ嘿嘿~ 一，为啥要写博客了解概念我记得第一次了解到博客这个概念是在哔哩哔哩 ，当时还是初二。相关视频 第一次看到的时候就感觉特别有意思，于是就去跟着视频去做了一遍。我记得这位UP主还自己出钱，提供过免费的二级域名让我们去试着搭建，现在已经没有了。 中途放弃当时了解到的是，建一个博客必须需要服务器~，一台服务器就要好多钱，觉得门槛太高，就没继续往下探索。B站当时好像也没有任何教程,也有可能是我搜索的有问题？ 发现新大陆有次我突然又回想到了博客这事，于是去B站搜索博客一关键词，了解到了Hexo，Gridea这种静态博客生成器，还有代码托管网站Github。这让我又重新有了搭建博客的兴趣！ 尝试当时没有任何的代码基础，自己啥也不懂，一开始用的Hexo，全是网上搜教程，傻瓜式一步一步来，然后教程里没有讲到的，我写出来全是报错，红色的致命错误，当时也没去找大佬，自己就在错误中摸索吧~，非常的崩溃，整的我有一段时间不想弄了。 契机之后看到了Gridea这个生成器，并且Gridea的主题里，有一个搬运自Hexo的Next主题。因为Gridea有自己的UI界面，操作起来很方便，每次生成和上传几乎都是成功的。这里感谢Next主题的作者们，以及Madara搬运的Next主题。之后开始正常使用博客后，我不满足于现状，感觉Gridea的扩展性太弱了，就开始一边用Gridea写博客虽然也没写多少，嘿嘿，一边探索Hexo这个扩展性极高的生成器。 搭建过程搭建过程除了网上搜教程，全靠自己摸索，没有问别的大佬，有点社恐吧~2333，有时折腾到凌晨3点多。终于在一个暑假过后，在Hexo上获得了突破，有了一个像样的博客 。 违背初衷之后可以说是走火入魔了，初衷是想有个自己可以写东西的地方吧，我也挺喜欢画画的，也可以把自己的画放在博客上面。但是我开始折腾主题，想让自己的博客变的好看 Next主题 Next Madara 更换为Butterfly主题有次在CSDN上搜索推荐的Hexo主题，偶然间看到了Buttefly主题，第一次看到时一脸惊讶：哇！怎么这么好看！加载速度也嗖嗖地，非常快！觉得 这个主题不错。于是就变成了现在的这个样子。也感谢Butterfly作者做了这么棒的主题。 Butterfly 魔改然后这个主题的扩展性很强吧，就衍生出了一堆的魔改。我现在写这个文章时，用的就是自己已经魔改好的主题。这个魔改也很折腾人，但是也让我逐渐理解了这个Hexo，还有主题的一些机制吧~ 结束总之就是这样啦，从初二开始探索到现在初中毕业吧。这个写博客的动力来源，一开始是因为我初一时，好像很浪费时间，总是浑浑噩噩的。我想通过这个来弥补吧~。现在的话就是一个兴趣吧，也挺好，写到这里时我还挺激动的~ 写的有些匆忙，不合适的地方可以指出来哈OvO~","summary":"博主刚开始写博客，写的不好的各位客官可以指出来，QwQ嘿嘿~ 一，为啥要写博客了解概念我记得第一次了解到博客这个概念是在哔哩哔哩 ，当时还是初二。相关视频 第一次看到的时候就感觉特别有意思，于是就去跟着视频去做了一遍。我记得这位UP主还自己出钱，提供过免费的二级域名让我们去试着搭建，现在已经没有了。 中途放弃当时了解到的是，建一个博客必须需要服务器~，一台服务器就要好多钱，觉得门槛太高，就没继续往下探索。B站当时好像也没有任何教程,也有可能是我搜索的有问题？ 发现新大陆有次我突然又回想到了博客这事，于是去B站搜索博客一关键词，了解到了Hexo，Gridea这种静态博客生成器，还有代码托管网站Github。这让我又重新有了搭建博客的兴趣！ 尝试当时没有任何的代码基础，自己啥也不懂，一开始用的Hexo，全是网上搜教程，傻瓜式一步一步来，然后教程里没有讲到的，我写出来全是报错，红色的致命错误，当时也没去找大佬，自己就在错误中摸索吧~，非常的崩溃，整的我有一段时间不想弄了。 契机之后看到了Gridea这个生成器，并且Gridea的主题里，有一个搬运自Hexo的Next主题。因为Gridea有自己的UI界面，操作起来很方便，每次生成和上传几乎都是成功的。这里感谢Next主题的作者们，以及Madara搬运的Next主题。之后开始正常使用博客后，我不满足于现状，感觉Gridea的扩展性太弱了，就开始一边用Gridea写博客虽然也没写多少，嘿嘿，一边探索Hexo这个扩展性极高的生成器。 搭建过程搭建过程除了网上搜教程，全靠自己摸索，没有问别的大佬，有点社恐吧~2333，有时折腾到凌晨3点多。终于在一个暑假过后，在Hexo上获得了突破，有了一个像样的博客 。 违背初衷之后可以说是走火入魔了，初衷是想有个自己可以写东西的地方吧，我也挺喜欢画画的，也可以把自己的画放在博客上面。但是我开始折腾主题，想让自己的博客变的好看 Next主题 Next Madara 更换为Butterfly主题有次在CSDN上搜索推荐的Hexo主题，偶然间看到了Buttefly主题，第一次看到时一脸惊讶：哇！怎么这么好看！加载速度也嗖嗖地，非常快！觉得 这个主题不错。于是就变成了现在的这个样子。也感谢Butterfly作者做了这么棒的主题。 Butterfly 魔改然后这个主题的扩展性很强吧，就衍生出了一堆的魔改。我现在写这个文章时，用的就是自己已经魔改好的主题。这个魔改也很折腾人，但是也让我逐渐理解了这个Hexo，还有主题的一些机制吧~ 结束总之就是这样啦，从初二开始探索到现在初中毕业吧。这个写博客的动力来源，一开始是因为我初一时，好像很浪费时间，总是浑浑噩噩的。我想通过这个来弥补吧~。现在的话就是一个兴趣吧，也挺好，写到这里时我还挺激动的~ 写的有些匆忙，不合适的地方可以指出来哈OvO~","date_published":"2021-08-25T08:40:05.000Z","tags":["生活","博客","Hexo"]},{"id":"https://www.zxma.top/posts/28820/","url":"https://www.zxma.top/posts/28820/","title":"博客使用Dplayer播放器","content_html":"<div class=\"note blue info flat\"><p>方法来源于CSDN博客，适用于静态博客网站。首次访问可能无法加载，多刷新几次</p>\n</div>\n<div class=\"note orange default flat\"><p>插件<a href=\"https://www.npmjs.com/package/hexo-tag-dplayer\">hexo-tag-dplayer</a>，原<a href=\"http://dplayer.js.org/\">Dplayer</a></p>\n</div>\n<h1 id=\"战-地-2-0-4-2\"><a href=\"#战-地-2-0-4-2\" class=\"headerlink\" title=\"战 地 2 0 4 2\"></a>战 地 2 0 4 2</h1><p><a href=\"https://www.bilibili.com/video/BV1oK4y1G7xT\">视频来源</a>哔哩哔哩《战 地 2 0 4 2》<svg class=\"icon\" style=\"width:1em; height:1em\" aria-hidden=\"true\"><use xlink:href=\"#icon-bilibili3\"></use></svg><br>↓视频↓<br><div id=\"dplayer0\" class=\"dplayer hexo-tag-dplayer-mark\" style=\"margin-bottom: 20px;\"></div><script>(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer0\"),\"theme\":\"#FADFA3\",\"loop\":true,\"video\":{\"url\":\"https://r.pan.zxma.top/zd01.mp4\",\"pic\":\"https://fastly.jsdelivr.net/gh/zxmacc/CDN@master/images/xxx.2pyzvkfrbdu0.gif\"},\"danmaku\":{\"id\":\"312412\",\"api\":\"https://dplayer.moerats.com/\",\"token\":\"tokendemo\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><br><details class=\"folding-tag\" green><summary> 查看代码 </summary>\n              <div class='content'>\n              <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% dplayer </span><br><span class=\"line\">&quot;url=https://r.pan.zxma.top/zd01.mp4&quot;  </span><br><span class=\"line\">&quot;pic=https://cdn.jsdelivr.net/gh/zxmacc/CDN@master/images/xxx.2pyzvkfrbdu0.gif&quot; </span><br><span class=\"line\">&quot;loop=yes&quot; </span><br><span class=\"line\">&quot;theme=#FADFA3&quot; </span><br><span class=\"line\">&quot;autoplay=false&quot; </span><br><span class=\"line\">&quot;token=tokendemo&quot; </span><br><span class=\"line\">&quot;api=https://dplayer.moerats.com/&quot; </span><br><span class=\"line\">&quot;id=312412&quot; %&#125;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details></p>\n<h1 id=\"《明日方舟》EP-随意随意呀\"><a href=\"#《明日方舟》EP-随意随意呀\" class=\"headerlink\" title=\"《明日方舟》EP - 随意随意呀\"></a>《明日方舟》EP - 随意随意呀</h1><p><a href=\"https://www.bilibili.com/video/BV1Wm4y1f7NM\">视频来源</a>哔哩哔哩《明日方舟》EP - 随意随意呀 <svg class=\"icon\" style=\"width:1em; height:1em\" aria-hidden=\"true\"><use xlink:href=\"#icon-bilibili3\"></use></svg><br>↓视频↓<br><div id=\"dplayer1\" class=\"dplayer hexo-tag-dplayer-mark\" style=\"margin-bottom: 20px;\"></div><script>(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer1\"),\"theme\":\"#FADFA3\",\"loop\":true,\"video\":{\"url\":\"https://r.pan.zxma.top/%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8BEP_-_%E9%9A%8F%E6%84%8F%E9%9A%8F%E6%84%8F%E5%91%80.%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8BEP_-_%E9%9A%8F%E6%84%8F%E9%9A%8F%E6%84%8F%E5%91%80.496622859.mp4\",\"pic\":\"https://fastly.jsdelivr.net/gh/zxmacc/CDN@master/images/xxx.2pyzvkfrbdu0.gif\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><br><details class=\"folding-tag\" green><summary> 查看代码 </summary>\n              <div class='content'>\n              <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% dplayer </span><br><span class=\"line\">&quot;url=https://r.pan.zxma.top/%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8BEP<span class=\"emphasis\">_-_</span>%E9%9A%8F%E6%84%8F%E9%9A%8F%E6%84%8F%E5%91%80.%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8BEP<span class=\"emphasis\">_-_</span>%E9%9A%8F%E6%84%8F%E9%9A%8F%E6%84%8F%E5%91%80.496622859.mp4&quot;  </span><br><span class=\"line\">&quot;pic=https://cdn.jsdelivr.net/gh/zxmacc/CDN@master/images/xxx.2pyzvkfrbdu0.gif&quot; </span><br><span class=\"line\">&quot;loop=yes&quot; </span><br><span class=\"line\">&quot;theme=#FADFA3&quot; </span><br><span class=\"line\">&quot;autoplay=false&quot; </span><br><span class=\"line\">&quot;token=tokendemo&quot; </span><br><span class=\"line\">&quot;api=https://dplayer.moerats.com/&quot; </span><br><span class=\"line\">&quot;id=3634442&quot; %&#125;</span><br></pre></td></tr></table></figure>\n              </div>\n            </details></p>\n<p>之后呢，我又尝试了一些东西，最终效果在菜单栏，杂项分类里的番剧哈，各位可以康康，诶嘿。（没啥技术含量哈）<img no-lazy class=\"inline\" src=\"https://cdn.jsdelivr.net/gh/2x-ercha/twikoo-magic@master/image/huaji/huaji20.jpg\" style=\"height:40px;\"/></p>\n","content_text":"方法来源于CSDN博客，适用于静态博客网站。首次访问可能无法加载，多刷新几次 插件hexo-tag-dplayer，原Dplayer 战 地 2 0 4 2视频来源哔哩哔哩《战 地 2 0 4 2》↓视频↓(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer0\"),\"theme\":\"#FADFA3\",\"loop\":true,\"video\":{\"url\":\"https://r.pan.zxma.top/zd01.mp4\",\"pic\":\"https://fastly.jsdelivr.net/gh/zxmacc/CDN@master/images/xxx.2pyzvkfrbdu0.gif\"},\"danmaku\":{\"id\":\"312412\",\"api\":\"https://dplayer.moerats.com/\",\"token\":\"tokendemo\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 查看代码 123456789&#123;% dplayer &quot;url=https://r.pan.zxma.top/zd01.mp4&quot; &quot;pic=https://cdn.jsdelivr.net/gh/zxmacc/CDN@master/images/xxx.2pyzvkfrbdu0.gif&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; &quot;api=https://dplayer.moerats.com/&quot; &quot;id=312412&quot; %&#125; 《明日方舟》EP - 随意随意呀视频来源哔哩哔哩《明日方舟》EP - 随意随意呀 ↓视频↓(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer1\"),\"theme\":\"#FADFA3\",\"loop\":true,\"video\":{\"url\":\"https://r.pan.zxma.top/%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8BEP_-_%E9%9A%8F%E6%84%8F%E9%9A%8F%E6%84%8F%E5%91%80.%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8BEP_-_%E9%9A%8F%E6%84%8F%E9%9A%8F%E6%84%8F%E5%91%80.496622859.mp4\",\"pic\":\"https://fastly.jsdelivr.net/gh/zxmacc/CDN@master/images/xxx.2pyzvkfrbdu0.gif\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 查看代码 123456789&#123;% dplayer &quot;url=https://r.pan.zxma.top/%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8BEP_-_%E9%9A%8F%E6%84%8F%E9%9A%8F%E6%84%8F%E5%91%80.%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8BEP_-_%E9%9A%8F%E6%84%8F%E9%9A%8F%E6%84%8F%E5%91%80.496622859.mp4&quot; &quot;pic=https://cdn.jsdelivr.net/gh/zxmacc/CDN@master/images/xxx.2pyzvkfrbdu0.gif&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; &quot;api=https://dplayer.moerats.com/&quot; &quot;id=3634442&quot; %&#125; 之后呢，我又尝试了一些东西，最终效果在菜单栏，杂项分类里的番剧哈，各位可以康康，诶嘿。（没啥技术含量哈）","summary":"方法来源于CSDN博客，适用于静态博客网站。首次访问可能无法加载，多刷新几次 插件hexo-tag-dplayer，原Dplayer 战 地 2 0 4 2视频来源哔哩哔哩《战 地 2 0 4 2》↓视频↓(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer0\"),\"theme\":\"#FADFA3\",\"loop\":true,\"video\":{\"url\":\"https://r.pan.zxma.top/zd01.mp4\",\"pic\":\"https://fastly.jsdelivr.net/gh/zxmacc/CDN@master/images/xxx.2pyzvkfrbdu0.gif\"},\"danmaku\":{\"id\":\"312412\",\"api\":\"https://dplayer.moerats.com/\",\"token\":\"tokendemo\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 查看代码 123456789&#123;% dplayer &quot;url=https://r.pan.zxma.top/zd01.mp4&quot; &quot;pic=https://cdn.jsdelivr.net/gh/zxmacc/CDN@master/images/xxx.2pyzvkfrbdu0.gif&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; &quot;api=https://dplayer.moerats.com/&quot; &quot;id=312412&quot; %&#125; 《明日方舟》EP - 随意随意呀视频来源哔哩哔哩《明日方舟》EP - 随意随意呀 ↓视频↓(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer1\"),\"theme\":\"#FADFA3\",\"loop\":true,\"video\":{\"url\":\"https://r.pan.zxma.top/%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8BEP_-_%E9%9A%8F%E6%84%8F%E9%9A%8F%E6%84%8F%E5%91%80.%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8BEP_-_%E9%9A%8F%E6%84%8F%E9%9A%8F%E6%84%8F%E5%91%80.496622859.mp4\",\"pic\":\"https://fastly.jsdelivr.net/gh/zxmacc/CDN@master/images/xxx.2pyzvkfrbdu0.gif\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 查看代码 123456789&#123;% dplayer &quot;url=https://r.pan.zxma.top/%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8BEP_-_%E9%9A%8F%E6%84%8F%E9%9A%8F%E6%84%8F%E5%91%80.%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8BEP_-_%E9%9A%8F%E6%84%8F%E9%9A%8F%E6%84%8F%E5%91%80.496622859.mp4&quot; &quot;pic=https://cdn.jsdelivr.net/gh/zxmacc/CDN@master/images/xxx.2pyzvkfrbdu0.gif&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; &quot;api=https://dplayer.moerats.com/&quot; &quot;id=3634442&quot; %&#125; 之后呢，我又尝试了一些东西，最终效果在菜单栏，杂项分类里的番剧哈，各位可以康康，诶嘿。（没啥技术含量哈）","date_published":"2021-06-15T13:57:11.000Z","tags":["笔记","视频","Dplayer"]},{"id":"https://www.zxma.top/posts/4439/","url":"https://www.zxma.top/posts/4439/","title":"动画番剧推荐（来自深渊）","content_html":"<p>电视动画片《来自深渊》改编自土笔章人原作的同名漫画作品，由KINEMA CITRUS负责制作。于2016年12月21日宣布动画化。</p>\n<h1 id=\"剧情简介\"><a href=\"#剧情简介\" class=\"headerlink\" title=\"剧情简介\"></a>剧情简介</h1><p>在每一个角落都被探索完毕的世界中，唯一残留的秘境——大洞穴“阿比斯”。不知道延续到何方，深不见底的巨大纵向洞穴，栖息着奇妙奇怪的生物们，沉眠着现在的人类无法制造的贵重遗物。“阿比斯”那充满了不可思议的姿态吸引了人们，并驱使人们展开冒险。如此，多次挑战大洞穴的冒险者们，陆续得到了“探窟家”的名号。<br>住在建造于深渊边缘的城镇“奥斯”的孤儿莉可，梦想着有朝一日成为母亲那样伟大的探窟家，并解开深渊的谜团。这样的某一天，莉可在探索深渊的途中，捡到了有着少年样貌的机器人…？ （以上来源于百度百科）</p>\n<h1 id=\"混剪视频（来源百度）\"><a href=\"#混剪视频（来源百度）\" class=\"headerlink\" title=\"混剪视频（来源百度）\"></a>混剪视频（来源百度）</h1><p>手机端直接点击链接观看<a href=\"https://cdn.jsdelivr.net/gh/zxmav/CND@2.4/images/%E6%9D%A5%E8%87%AA%E6%B7%B1%E6%B8%8A,%E4%B8%80%E6%97%A0%E6%89%80%E7%9F%A5.mp4\">点击观看视频</a></p>\n<video id=\"video\" controls=\"\" preload=\"none\" width=\"630px\" height=\"368px\" poster=\"https://cdn.jsdelivr.net/gh/zxmav/CND@2.5/images/abyss.jpg\">\n      <source id=\"mp4\"  src=\"https://cdn.jsdelivr.net/gh/zxmav/CND@2.4/images/%E6%9D%A5%E8%87%AA%E6%B7%B1%E6%B8%8A,%E4%B8%80%E6%97%A0%E6%89%80%E7%9F%A5.mp4\" type=\"video/mp4\">\n      </video>","content_text":"电视动画片《来自深渊》改编自土笔章人原作的同名漫画作品，由KINEMA CITRUS负责制作。于2016年12月21日宣布动画化。 剧情简介在每一个角落都被探索完毕的世界中，唯一残留的秘境——大洞穴“阿比斯”。不知道延续到何方，深不见底的巨大纵向洞穴，栖息着奇妙奇怪的生物们，沉眠着现在的人类无法制造的贵重遗物。“阿比斯”那充满了不可思议的姿态吸引了人们，并驱使人们展开冒险。如此，多次挑战大洞穴的冒险者们，陆续得到了“探窟家”的名号。住在建造于深渊边缘的城镇“奥斯”的孤儿莉可，梦想着有朝一日成为母亲那样伟大的探窟家，并解开深渊的谜团。这样的某一天，莉可在探索深渊的途中，捡到了有着少年样貌的机器人…？ （以上来源于百度百科） 混剪视频（来源百度）手机端直接点击链接观看点击观看视频","summary":"电视动画片《来自深渊》改编自土笔章人原作的同名漫画作品，由KINEMA CITRUS负责制作。于2016年12月21日宣布动画化。 剧情简介在每一个角落都被探索完毕的世界中，唯一残留的秘境——大洞穴“阿比斯”。不知道延续到何方，深不见底的巨大纵向洞穴，栖息着奇妙奇怪的生物们，沉眠着现在的人类无法制造的贵重遗物。“阿比斯”那充满了不可思议的姿态吸引了人们，并驱使人们展开冒险。如此，多次挑战大洞穴的冒险者们，陆续得到了“探窟家”的名号。住在建造于深渊边缘的城镇“奥斯”的孤儿莉可，梦想着有朝一日成为母亲那样伟大的探窟家，并解开深渊的谜团。这样的某一天，莉可在探索深渊的途中，捡到了有着少年样貌的机器人…？ （以上来源于百度百科） 混剪视频（来源百度）手机端直接点击链接观看点击观看视频","date_published":"2020-10-17T17:20:25.000Z","tags":["分享","动画","视频"]}]}